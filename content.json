{"meta":{"title":"Uniqueland","subtitle":"--XsRan's Personal Blog","description":"","author":"XsRan","url":"http://uniqueland.top","root":"/"},"pages":[{"title":"Categories","date":"2020-05-10T05:33:34.000Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"categories/index.html","permalink":"http://uniqueland.top/categories/index.html","excerpt":"","text":""},{"title":"sitemap","date":"2020-05-10T05:34:11.000Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Sitemap/index.html","permalink":"http://uniqueland.top/Sitemap/index.html","excerpt":"","text":""},{"title":"来了","date":"2020-11-09T14:06:06.735Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/ToXiaowei.html","permalink":"http://uniqueland.top/Eastereggs/ToXiaowei.html","excerpt":"","text":"http://uniqueland.top/Eastereggs/Class17"},{"title":"关于","date":"2020-05-10T05:33:14.000Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"about/index.html","permalink":"http://uniqueland.top/about/index.html","excerpt":"","text":"第一次搭建网站也不知道在“关于”版块写什么，就留个微信吧，有路过的想交个朋友的可以加微信交流一下。微信ID：KID3317"},{"title":"所有标签","date":"2020-11-28T16:21:57.445Z","updated":"2020-11-28T16:21:57.445Z","comments":true,"path":"tags/index.html","permalink":"http://uniqueland.top/tags/index.html","excerpt":"","text":""},{"title":"Schedule","date":"2020-05-10T05:33:53.000Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"schedule/index.html","permalink":"http://uniqueland.top/schedule/index.html","excerpt":"","text":""},{"title":"","date":"2021-04-24T14:21:13.884Z","updated":"2021-04-24T14:21:13.884Z","comments":true,"path":"hidden/resources.html","permalink":"http://uniqueland.top/hidden/resources.html","excerpt":"","text":"图片类 Wallhaven Pixabay Pngimg Pexels Unsplash Foodies 音效类 爱给网 字体类 字体天下 猫啃网 求字体 字由 100font 可商用字体查询 影视类 真不卡影视 独播库 91美剧网 色彩类 colorhunt Coolors Palettable PPT类 PPT宝藏 PPT超级市场 优品PPT 图标类 阿里巴巴矢量图标库 Iconstore 插画制作工具 视频类 Videezy Videvo Mixkit Distill 蓝光网 综合类 Anyknew Topbook"},{"title":"彩蛋","date":"2020-11-10T03:26:46.695Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/Class17/Class17.html","permalink":"http://uniqueland.top/Eastereggs/Class17/Class17.html","excerpt":"","text":"FBI WARNING!非十七班同学请退出网页！(虽然说其他人也进不来) ,注意：此链接为内部链接，没有链接的人进不来，无需担心隐私泄漏。 镇楼百日誓师高二运动会高三运动会个人特写彩蛋中的彩蛋日常高一合照 关于个人照片如有因各种原因而不愿意展示图片的同学请与我联系如有想添加图片的同学也请与我联系，乐意至极待办事项收集毕业照打包图片，放链接征集网页文案制作子网……算了我好懒…终究还是逃不过制作子网页… 由于先前只有一个网页，故图片展示数量有限。现在…增加子网页的图片由于图床原因故待排版关于水印由于原先使用的图床出现了bug，导致部分图片加载错误，故不得不借用微博作为图床。关于图片整合包由于图片数量较多，故只挑选了一些较具有代表性的发布。后续会有网盘链接。变更记录changelog首次部署更换主题部署过程出现错误，重装系统贴图图床出现问题，更换图床图床再次出现问题，使用微博作为临时图床，补充图片由于图片过多，不得不分为数个子网页…图床再再再次出现问题，所有网页 推 倒 重 做再次排版添加图片，略作排版"},{"title":"高一","date":"2020-11-09T14:06:06.751Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/Class17/Grade1.html","permalink":"http://uniqueland.top/Eastereggs/Class17/Grade1.html","excerpt":"","text":"合照"},{"title":"彩蛋中的彩蛋","date":"2020-11-09T14:06:06.748Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/Class17/Eastereggs.html","permalink":"http://uniqueland.top/Eastereggs/Class17/Eastereggs.html","excerpt":"","text":"日常"},{"title":"高二运动会","date":"2020-11-09T14:06:06.743Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/Class17/Grade2.html","permalink":"http://uniqueland.top/Eastereggs/Class17/Grade2.html","excerpt":"","text":"!s 高三运动会"},{"title":"个人特写","date":"2020-11-10T05:16:37.169Z","updated":"2020-11-10T05:16:37.168Z","comments":true,"path":"Eastereggs/Class17/Closeup.html","permalink":"http://uniqueland.top/Eastereggs/Class17/Closeup.html","excerpt":"","text":"感谢高中有你们 (谁有珠姐和马老师的照片提供一下嘛…凑齐召唤神龙) 彩蛋中的彩蛋"},{"title":"高三运动会","date":"2020-11-09T14:06:06.745Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/Class17/Grade3.html","permalink":"http://uniqueland.top/Eastereggs/Class17/Grade3.html","excerpt":"","text":"个人特写"},{"title":"合照","date":"2020-11-10T05:15:55.270Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/Class17/Groupphotos.html","permalink":"http://uniqueland.top/Eastereggs/Class17/Groupphotos.html","excerpt":"","text":"聚是一团火，散是满天星。十七班的各位兄弟姐妹们，我们有缘，江湖再见！ 返回"},{"title":"成人礼 & 誓师","date":"2020-11-09T14:06:06.742Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/Class17/Oath.html","permalink":"http://uniqueland.top/Eastereggs/Class17/Oath.html","excerpt":"","text":"高二运动会"},{"title":"日常","date":"2020-11-09T14:06:06.750Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/Class17/Routine.html","permalink":"http://uniqueland.top/Eastereggs/Class17/Routine.html","excerpt":"","text":"高一"},{"title":"镇楼","date":"2020-11-09T14:06:06.741Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/Class17/Starting.html","permalink":"http://uniqueland.top/Eastereggs/Class17/Starting.html","excerpt":"","text":"百日誓师"},{"title":"","date":"2020-11-10T02:28:15.625Z","updated":"2020-09-28T11:51:06.000Z","comments":true,"path":"Eastereggs/JNU2020/记暨大新训.html","permalink":"http://uniqueland.top/Eastereggs/JNU2020/%E8%AE%B0%E6%9A%A8%E5%A4%A7%E6%96%B0%E8%AE%AD.html","excerpt":"","text":"记暨大新训帅气昊哥在线演唱 随拍 在线征集文案…"},{"title":"彩蛋","date":"2020-11-09T14:06:06.755Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/Drafts/Class17.html","permalink":"http://uniqueland.top/Eastereggs/Drafts/Class17.html","excerpt":"","text":"FBI WARNING!非十七班同学请退出网页！(虽然说其他人也进不来) 由于展示图片较多，建议等待十秒再浏览，效果更佳。 镇楼 百日誓师 高二运动会 高三运动会 个人特写 彩蛋中的彩蛋 日常 高一 合照 待办事项收集毕业照打包图片，放链接征集网页文案制作子网……算了我好懒…关于水印由于原先使用的图床出现了bug，导致部分图片加载错误，故不得不借用微博作为图床。关于图片整合包由于图片数量较多，故只挑选了一些较具有代表性的发布。后续会有网盘链接。变更记录changelog2020.05.25 首次部署2020.05.27 更换主题2020.05.28 部署过程出现错误，重装系统2020.06.01 贴图图床出现问题，更换图床2020.06.14 图床再次出现问题，使用微博作为临时图床，补充图片"}],"posts":[{"title":"HCTF 2018WarmUp 1","slug":"[HCTF 2018]WarmUp 1","date":"2021-11-07T15:15:57.237Z","updated":"2021-11-07T15:55:16.283Z","comments":true,"path":"2021/11/07/[HCTF 2018]WarmUp 1/","link":"","permalink":"http://uniqueland.top/2021/11/07/[HCTF%202018]WarmUp%201/","excerpt":"一上来便是一张天真无邪的笑脸","text":"一上来便是一张天真无邪的笑脸无头绪，f12查源码，发现source.php 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849&lt;?php highlight_file(__FILE__); class emmm &#123; public static function checkFile(&amp;$page) &#123; $whitelist = [&quot;source&quot;=&gt;&quot;source.php&quot;,&quot;hint&quot;=&gt;&quot;hint.php&quot;]; if (! isset($page) || !is_string($page)) &#123; echo &quot;you can&#x27;t see it&quot;; return false; &#125; if (in_array($page, $whitelist)) &#123; return true; &#125; $_page = mb_substr( $page, 0, mb_strpos($page . &#x27;?&#x27;, &#x27;?&#x27;) ); if (in_array($_page, $whitelist)) &#123; return true; &#125; $_page = urldecode($page); $_page = mb_substr( $_page, 0, mb_strpos($_page . &#x27;?&#x27;, &#x27;?&#x27;) ); if (in_array($_page, $whitelist)) &#123; return true; &#125; echo &quot;you can&#x27;t see it&quot;; return false; &#125; &#125; if (! empty($_REQUEST[&#x27;file&#x27;]) &amp;&amp; is_string($_REQUEST[&#x27;file&#x27;]) &amp;&amp; emmm::checkFile($_REQUEST[&#x27;file&#x27;]) ) &#123; include $_REQUEST[&#x27;file&#x27;]; exit; &#125; else &#123; echo &quot;&lt;br&gt;&lt;img src=\\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\\&quot; /&gt;&quot;; &#125; ?&gt; 开始代码审计 网页通过对传入的参数进行过滤后进行文件包含 一开始我以为是需要满足所有的条件，但根据下文包含文件的代码发现只需要满足其中一个就足够了 123456789if (! empty($_REQUEST[&#x27;file&#x27;]) &amp;&amp; is_string($_REQUEST[&#x27;file&#x27;]) &amp;&amp; emmm::checkFile($_REQUEST[&#x27;file&#x27;]) ) &#123; include $_REQUEST[&#x27;file&#x27;]; exit; &#125; else &#123; echo &quot;&lt;br&gt;&lt;img src=\\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\\&quot; /&gt;&quot;; &#125; 在尝试了许久之后我发现重点在于最后一个判断，即从解码函数开始的判断；在解码之后出现了新的变量$_page，然后对该变量进行分割，取出变量中问号之前的部分，覆盖原来的变量，再判断该变量是否位于白名单内。 1234567$_page = mb_substr( $_page, 0, mb_strpos($_page . &#x27;?&#x27;, &#x27;?&#x27;) ); if (in_array($_page, $whitelist)) &#123; return true; 判断通过后对文件进行包含，这时遍历文件目录就能找到flag了，文件名称在hint.php里 最终payload：","categories":[],"tags":[{"name":"web","slug":"web","permalink":"http://uniqueland.top/tags/web/"}]},{"title":"使用C语言实现栈","slug":"stack_by_C","date":"2021-09-05T14:17:42.819Z","updated":"2021-09-05T15:09:46.818Z","comments":true,"path":"2021/09/05/stack_by_C/","link":"","permalink":"http://uniqueland.top/2021/09/05/stack_by_C/","excerpt":"说明 作为栈顶的节点不存储数据","text":"说明 作为栈顶的节点不存储数据，仅作定位功能 数据项的类型可自行定义 在push和pop时，并不改变栈顶节点的位置，仅仅是将待操作节点加入或删除并改变指针指向而已 栈顶节点的数据项可用来存储当前栈的节点数，这点在push函数的定义中可以体现 主函数仅作各函数的演示使用，可自定义 定义相应结构 1234typedef struct node&#123; int data; struct node *next;&#125;node; 该结构由一个整型和一个指向此结构的指针组成。 定义push函数 123456789int push(node *top, int data)&#123; node *temp = (node *)malloc(sizeof(node)); temp-&gt;data = data; temp-&gt;next = top-&gt;next; top-&gt;next = temp; top-&gt;data++; return data;&#125; 第一步：分配空间 第二步：存储数据 第三步：改变栈顶和新增项的next指针，递增top节点的data项 定义pop函数 12345678910111213int pop(node *top)&#123; if(!top-&gt;next)&#123; printf(&quot;Stack is empty now.&quot;); return -1; &#125; int pop_data = top-&gt;next-&gt;data; node *temp = top-&gt;next; top-&gt;next = top-&gt;next-&gt;next; temp = NULL; free(temp); return pop_data;&#125; 第一步：判断栈是否为空 第二步：定义变量存储待弹出的数据和待删除节点 第三步：改变栈顶的next指针 释放待删除节点空间，删除节点 定义初始化函数 为栈顶节点分配空间并初始化指针为空 1234567node* stack_init()&#123; node *temp = (node *)malloc(sizeof(node)); temp-&gt;data = 0; temp-&gt;next = NULL; return temp;&#125; 定义遍历显示函数 1234567void display(node *current)&#123; current = current-&gt;next; while(current)&#123; printf(&quot;%d\\n&quot;,current-&gt;data); current = current-&gt;next; &#125;&#125; 将当前节点指向栈顶的下一个节点 当前节点不为空时进入遍历循环 打印当前节点的数据项 将当前节点指向下一个节点 源代码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;typedef struct node&#123; int data; struct node *next;&#125;node;int push(node *top, int data);int pop(node *top);node* stack_init();void display(node *current);int push(node *top, int data)&#123; node *temp = (node *)malloc(sizeof(node)); temp-&gt;data = data; temp-&gt;next = top-&gt;next; top-&gt;next = temp; return data;&#125;int pop(node *top)&#123; if(!top-&gt;next)&#123; printf(&quot;Stack is empty now.&quot;); return -1; &#125; int pop_data = top-&gt;next-&gt;data; node *temp = top-&gt;next; top-&gt;next = top-&gt;next-&gt;next; temp = NULL; free(temp); return pop_data;&#125;node* stack_init()&#123; node *temp = (node *)malloc(sizeof(node)); temp-&gt;data = 0; temp-&gt;next = NULL; return temp;&#125;void display(node *current)&#123; current = current-&gt;next; while(current)&#123; printf(&quot;%d\\n&quot;,current-&gt;data); current = current-&gt;next; &#125;&#125;int main()&#123; int first_input; int pop_input, pop_data; node *top = stack_init(); int status; printf(&quot;Enter strings, Ctrl+Z to quit.\\n&quot;); status = scanf(&quot;%d&quot;,&amp;first_input); while(status!=EOF)&#123; push(top, first_input); status = scanf(&quot;%d&quot;,&amp;first_input); &#125; display(top); printf(&quot;Now enter 1 to pop data, 0 to quit.\\n&quot;); scanf(&quot;%d&quot;,&amp;pop_input); while(pop_input==1)&#123; pop_data = pop(top); if(pop_data==-1)&#123; break; &#125; printf(&quot;pop_data: %d\\n&quot;,pop_data); scanf(&quot;%d&quot;,&amp;pop_input); &#125; printf(&quot;\\nDone\\n&quot;); return 0;&#125;","categories":[],"tags":[{"name":"Program","slug":"Program","permalink":"http://uniqueland.top/tags/Program/"},{"name":"知识输出","slug":"知识输出","permalink":"http://uniqueland.top/tags/%E7%9F%A5%E8%AF%86%E8%BE%93%E5%87%BA/"}]},{"title":"使用C语言实现链表","slug":"link_list_by_C","date":"2021-05-02T06:13:00.666Z","updated":"2021-09-05T14:19:04.270Z","comments":true,"path":"2021/05/02/link_list_by_C/","link":"","permalink":"http://uniqueland.top/2021/05/02/link_list_by_C/","excerpt":"","text":"第一步：定义相应结构 由于实现链表的编程语言为C，不能够使用类，故使用结构来实现链表中的节点； 12345typedef struct LinkList &#123; char name[MAX_INPUT]; long number; LinkList* next;&#125;Link; 该结构由一个字符数组，一项编号和一个指向此结构的指针组成。 第二步：定义输入函数 为了更容易、更准确的获取输入，在程序中重新定义输入函数，在原有fgets()函数的基础上略作修改，得到新的输入函数s_gets()； 1234567891011121314151617char* s_gets(char* st, int n) &#123; char* ret_val; char* find; ret_val = fgets(st, n, stdin); if (ret_val) &#123; find = strchr(st, &#x27;\\n&#x27;); if (find) &#123; *find = &#x27;\\0&#x27;; &#125; else &#123; while (getchar() != &#x27;\\n&#x27;) &#123; continue; &#125; &#125; &#125; return ret_val;&#125; 该函数为返回类型为字符指针、接受参数为一个字符指针和一个整数的输入函数，其中字符指针就是字符数组名称，因为数组名称本质上就是数组首元素的地址，而该数组为字符数组，故该字符数组名称本质上就是字符指针； 在函数内部，我声明了两个字符指针，一个用来接受fgets函数的返回值，一个用来接受查找字符函数(strchr)的返回值； 关于fgets()函数： 如果接受输入的字符数量超过字符数组的大小(MAX_INPUT)，fgets()函数会返回先前传入的地址，即字符数组的名称，并且把末尾的字符换为空字符('\\0')，使之成为一个字符串； 如果接收输入的字符数量在字符数组的大小以内，那么fgets()函数会将空字符放置在换行符之前，然后同样返回先前传入的地址； 需要注意的是：fgets()函数在遇到文件结尾(EOF End Of File)时将会返回一个空指针； 关于strchr()函数： 在某个字符数组中查找某字符，并返回指向该字符的指针 r如果字符串中不包含该字符，则返回一个空指针 经过重写，修改如下： 首先使用fgets()函数接收输入，并将返回值存储在指针ret_val中，然后对该指针进行判断，如果不为空指针，则使用字符查找函数查找换行符，并将该换行符替换为空字符，如果查找换行符失败，说明输入的字符数量超过了字符数组的大小，这时使用一个while循环接收其余的输入并抛弃；如果ret_val为空指针，说明遇到文件结尾；最后返回ret_val； 第三步：编写主函数进行测试 12345678910111213141516171819202122232425int main() &#123; char input[MAX_INPUT]; Link* p = (Link*)malloc(sizeof(Link*)); Link* temp = p; printf(&quot;Now start recording: \\n&quot;); printf(&quot;Name : &quot;); while (s_gets(input,MAX_INPUT) != NULL &amp;&amp; input[0] != &#x27;\\0&#x27;) &#123; Link* a = (Link*)malloc(sizeof(Link)); a-&gt;next = NULL; temp-&gt;next = a; temp = temp-&gt;next; strcpy(a-&gt;name, input); printf(&quot;Number: &quot;); scanf(&quot;%ld&quot;, &amp;(a-&gt;number)); getchar(); printf(&quot;Name : &quot;); &#125; temp = p-&gt;next; printf(&quot;Recorded Data: \\n&quot;); while (temp) &#123; printf(&quot;Name: %s\\tNumber: %ld\\n&quot;, temp-&gt;name, temp-&gt;number); temp = temp-&gt;next; &#125; return 0;&#125; 首先声明一个字符数组用来储存输入，然后声明一个节点类型的指针作为头节点，并为其分配内存，接着再声明一个同样的临时指针指向该头指针，这里使用临时指针的目的是作为当前指针与下一个指针的过渡指针，同时保持头指针指向的内容不变，方便最后的输出； 在输出提示信息之后进入循环，退出条件为输入空行；在循环中，首先声明指向当前节点的指针并为其分配内存，接着将该指针指向的结构中的指针声明为NULL，然后将当前节点的指针赋给临时指针指向的结构的指针，使其与上一个节点相连，然后再将临时指针指向的指针赋给自身(其实就相当于使临时指针指向下一个节点)；接着将刚刚接收的输入复制到当前节点的name变量中，然后再接收编号的输入并存储到当前节点的number变量中；值得注意的是，在使用scanf()函数接收输入后该函数似乎会将换行符留在缓存区中，所以这里需要使用getchar()函数来将该换行符从缓存区中去除； 在循环结束之后，我将临时指针指向了头节点的下一个节点(请注意，头节点中并没有储存除下一个节点的地址之外的任何信息，故此处从头节点的下一个节点开始)；然后进入下一个while循环，退出条件为临时指针为空指针(因为在上一个while循环中已经将当前节点中的指针声明为NULL了，所以一旦第一个循环结束，最后一个节点中的指针必为NULL)，然后打印出当前节点的信息并将临时指针指向下一个节点。 源代码 最后附上源代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#include&lt;string.h&gt;#define MAX_INPUT 20char* s_gets(char* st, int n);char* s_gets(char* st, int n) &#123; char* ret_val; char* find; ret_val = fgets(st, n, stdin); if (ret_val) &#123; find = strchr(st, &#x27;\\n&#x27;); if (find) &#123; *find = &#x27;\\0&#x27;; &#125; else &#123; while (getchar() != &#x27;\\n&#x27;) &#123; continue; &#125; &#125; &#125; return ret_val;&#125;typedef struct LinkList &#123; char name[MAX_INPUT]; long number; LinkList* next;&#125;Link;int main() &#123; char input[MAX_INPUT]; Link* p = (Link*)malloc(sizeof(Link*)); Link* temp = p; printf(&quot;Now start recording: \\n&quot;); printf(&quot;Name : &quot;); while (s_gets(input,MAX_INPUT) != NULL &amp;&amp; input[0] != &#x27;\\0&#x27;) &#123; Link* a = (Link*)malloc(sizeof(Link)); a-&gt;next = NULL; temp-&gt;next = a; temp = temp-&gt;next; strcpy(a-&gt;name, input); printf(&quot;Number: &quot;); scanf(&quot;%ld&quot;, &amp;(a-&gt;number)); getchar(); printf(&quot;Name : &quot;); &#125; temp = p-&gt;next; printf(&quot;Recorded Data: \\n&quot;); while (temp) &#123; printf(&quot;Name: %s\\tNumber: %ld\\n&quot;, temp-&gt;name, temp-&gt;number); temp = temp-&gt;next; &#125; return 0;&#125;","categories":[],"tags":[{"name":"Program","slug":"Program","permalink":"http://uniqueland.top/tags/Program/"},{"name":"知识输出","slug":"知识输出","permalink":"http://uniqueland.top/tags/%E7%9F%A5%E8%AF%86%E8%BE%93%E5%87%BA/"}]},{"title":"用Python编写一个能将图片转换为字符画的程序","slug":"用Python编写一个能将图片转换为字符画的程序","date":"2021-04-09T16:46:04.299Z","updated":"2020-11-10T02:54:55.042Z","comments":true,"path":"2021/04/10/用Python编写一个能将图片转换为字符画的程序/","link":"","permalink":"http://uniqueland.top/2021/04/10/%E7%94%A8Python%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E8%83%BD%E5%B0%86%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%AD%97%E7%AC%A6%E7%94%BB%E7%9A%84%E7%A8%8B%E5%BA%8F/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081\\# -*- coding=utf-8 -*- from PIL import Image import argparse #命令行输入参数处理 parser = argparse.ArgumentParser() parser.add_argument(&#x27;file&#x27;) #输入文件parser.add_argument(&#x27;-o&#x27;, &#x27;--output&#x27;) #输出文件 parser.add_argument(&#x27;--width&#x27;, type = int, default = 80) #输出字符画宽 parser.add_argument(&#x27;--height&#x27;, type = int, default = 80) #输出字符画高 #获取参数 args = parser.parse_args() IMG = args.fileWIDTH = args.width HEIGHT = args.height OUTPUT = args.output ascii_char = list(&quot;$@B%8&amp;WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\\|()1&#123;&#125;[]?-_+~&lt;&gt;i!lI;:,\\&quot;^&#x27;. &quot;) # 将256灰度映射到70个字符上 def get_char(r,g,b,alpha = 256): ​ if alpha == 0: ​ return &#x27; &#x27; ​ length = len(ascii_char) ​ gray = int(0.2126 * r + 0.7152 * g + 0.0722 * b) ​ unit = (256.0 + 1)/length ​ return ascii_char[int(gray/unit)] if __name__ == &#x27;__main__&#x27;: ​ im = Image.open(IMG) ​ im = im.resize((WIDTH,HEIGHT), Image.NEAREST) ​ txt = &quot;&quot; ​ for i in range(HEIGHT): ​ for j in range(WIDTH): ​ txt += get_char(*im.getpixel((j,i))) ​ txt += &#x27;\\n&#x27; ​ print(txt) #字符画输出到文件 ​ if OUTPUT: ​ with open(OUTPUT,&#x27;w&#x27;) as f: ​ f.write(txt) ​ else: ​ with open(&quot;output.txt&quot;,&#x27;w&#x27;) as f: ​ f.write(txt)","categories":[],"tags":[{"name":"Program","slug":"Program","permalink":"http://uniqueland.top/tags/Program/"}]},{"title":"人工智能入门-查找","slug":"人工智能入门-搜索","date":"2021-04-09T16:46:04.298Z","updated":"2021-05-02T06:00:22.634Z","comments":true,"path":"2021/04/10/人工智能入门-搜索/","link":"","permalink":"http://uniqueland.top/2021/04/10/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%85%A5%E9%97%A8-%E6%90%9C%E7%B4%A2/","excerpt":"概述 众所周知，人工智能在近些年十分火爆，在各个领域的应用也是十分广泛，其中一个领域就是导航。","text":"概述 众所周知，人工智能在近些年十分火爆，在各个领域的应用也是十分广泛，其中一个领域就是导航。 也许有人会说，导航不就是电子地图嘛？和人工智能有什么关系？但其实在导航中人工智能发挥了很重要的作用。“条条大路通罗马”，为什么导航会向你推荐这条路而不推荐另一条路？这其中就涉及到了人工智能中的搜索算法。 在搜索中，往往有初始状态(initial states)、目标状态(goal states)，而人工智能所做的，就是在众多情形中，找到众多解决方法的最优解，其中会涉及到循环和迭代，假如我们现在有一个初始状态，我们要怎样达到目标状态呢？ 概念介绍 在这之前需要先了解一些概念： 动作：通常是接受状态的函数，返回在此状态中应该做出的决策 迁移模型：通常是接受状态和动作的函数，返回在此状态下做出此种决策后的新状态 节点：数据结构，用来记录状态，父节点，动作和路径成本 边界：数据结构，用来区分已探索的部分和未探索的部分 算法讨论 在了解了相关概念之后，我们开始讨论算法： 首先将初始状态放入边界，然后进入循环 如果边界为空，则无解 从边界中移去一个节点 如果此节点包含目标状态，则追踪父节点，然后返回解决方案 扩张节点并将其加入边界 下面举个例子： 假设我们现在的要求是找到从A到E的路径 第一步我们将A（初始状态）放入边界，进入循环 因为A不是目标状态，将A移出边界并将B加入边界 因为B不是目标状态，将B移出边界并将C和D加入边界 因为C不是目标状态，将C移出边界并将E加入边界 因为E是目标状态，所以我们返回从A到E的路径，循环结束 至此，我们就解决了一个非常简单的路径搜索问题，当然，这个算法还存在着许多问题，比如：如何确保算法不会重新检查当前状态的父节点？如果重复检查父节点，那么程序将进入无限死循环。解决方法很简单，使用一个数据结构来储存已检查过的节点，然后在每次检查节点时遍历此数据结构，如果存在与之相同的节点则不检查。 那么在实际情况下是怎么样的呢？ 实战 下面进入实战环节： 情境：你现在有一张迷宫地图，起点为A，终点为B，需要编写程序令计算机自行找出离开迷宫的路并显示在屏幕上 12345678910111213141516171819# # # # # B # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # A # # # # 我们将这个待实现的程序按照之前所讨论的分为几个部分： 如图所示，我们主要将程序分为三个部分： 首先是定义相关的变量，并且将初始状态放入边界； 然后进入循环： 第一步：检查边界的长度，如果等于0则说明无解 第二步：从边界中移去一个节点，并将此节点添加到表示已探索的数据结构 第三步：检查被移去的节点，如果此节点包含目标状态，则追踪其父节点，并返回路径 最后，我们使用一个循环来追踪完整的路径，并将其显示在屏幕上。 以下是根据思路实现的代码： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495map1 = [[&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;]]# set the routemap1[9][0]=&#x27;A&#x27;map1[0][9]=&#x27;B&#x27;for i in range(10): map1[5][i] = &#x27; &#x27;for i in range(10): map1[i][5] = &#x27; &#x27;map1[9][1] = &#x27; &#x27;map1[9][2] = &#x27; &#x27;map1[9][3] = &#x27; &#x27;map1[9][4] = &#x27; &#x27;map1[0][6] = &#x27; &#x27;map1[0][7] = &#x27; &#x27;map1[0][8] = &#x27; &#x27;# print out the mapfor i in map1: for j in i: print(j,end=&#x27; &#x27;) print(&quot;\\n&quot;)class Unit: def __init__(self,c,p): x=c[0] y=c[1] self.x=x self.y=y self.up=(self.x,self.y+1) self.down=(self.x,self.y-1) self.left=(self.x-1,self.y) self.right=(self.x+1,self.y) self.directions = [self.up,self.down,self.left,self.right] self.parent = pstart=Unit((9,0),(0,0))goal=Unit((0,9),(-1,-1))def travel(map1,start): frontier = [] explored = [] current = Unit((start.x,start.y),start.parent) frontier.append(current) while True: if len(frontier) == 0: print(&quot;No result&quot;) break del(frontier[0]) explored.append(Unit((current.x,current.y),current.parent)) if current.x == goal.x and current.y == goal.y: print(&quot;\\nGot it!\\n&quot;) while current.parent != (0,0): for trace in explored: if trace.x == current.parent[0] and trace.y == current.parent[1]: if map1[current.x][current.y] == &#x27; &#x27;: map1[current.x][current.y] = &#x27;.&#x27; # print(current.x,current.y) current = trace for i in map1: for j in i: print(j,end=&#x27; &#x27;) print(&quot;\\n&quot;) break for i in current.directions: j=Unit((i[0],i[1]),(current.x,current.y)) # print((j.x,j.y),end=&#x27;,&#x27;) condition = 1 for x in explored: if x.x==j.x and x.y==j.y: condition = 0 if condition and j.x&gt;=0 and j.x&lt;=9 and j.y&gt;=0 and j.y&lt;=9 and map1[j.x][j.y] != &#x27;#&#x27;: frontier.append(Unit((i[0],i[1]),(current.x,current.y))) current = frontier[0] travel(map1,start) 在实现的过程中，我遇到了一些问题： 由于对Python中类的使用不熟练，导致代码中有关部分看起来很奇怪 在遍历当前节点周围的有效节点时，没有重新初始化节点，而是直接将当前节点周围有效节点的坐标加入边界，导致循环从第二次开始就无法进行，因为坐标没有“周围的有效节点”这个属性 在将以探索过的节点加入对应数据结构后，检查下一个节点是否在此数据结构时直接使用“==”，但是即使坐标相同的两个节点也可能不相等，原因是这两个节点存在于不同的地址，正确的做法是再遍历一遍存储以探索过的数据结构，直接比较此数据结构中节点的坐标值 在完成初步的实现后，处于对代码重构的要求，对代码做了相关的函数封装： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107map1 = [[&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;]]# set the routemap1[9][0]=&#x27;A&#x27;map1[0][9]=&#x27;B&#x27;for i in range(10): map1[5][i] = &#x27; &#x27;for i in range(10): map1[i][5] = &#x27; &#x27;map1[9][1] = &#x27; &#x27;map1[9][2] = &#x27; &#x27;map1[9][3] = &#x27; &#x27;map1[9][4] = &#x27; &#x27;map1[0][6] = &#x27; &#x27;map1[0][7] = &#x27; &#x27;map1[0][8] = &#x27; &#x27;# print out the mapdef map_show(map1): for i in map1: for j in i: print(j,end=&#x27; &#x27;) print(&quot;\\n&quot;)map_show(map1)class Unit: def __init__(self,c,p): x=c[0] y=c[1] self.x=x self.y=y self.up=(self.x,self.y+1) self.down=(self.x,self.y-1) self.left=(self.x-1,self.y) self.right=(self.x+1,self.y) self.directions = [self.up,self.down,self.left,self.right] self.parent = pstart=Unit((9,0),(0,0))goal=Unit((0,9),(-1,-1))def route_trace(current,explored): while current.parent != (0,0): for trace in explored: if trace.x == current.parent[0] and trace.y == current.parent[1]: if map1[current.x][current.y] == &#x27; &#x27;: map1[current.x][current.y] = &#x27;.&#x27; # print(current.x,current.y) current = tracedef action(frontier,explored,current): for i in current.directions: j=Unit((i[0],i[1]),(current.x,current.y)) # print((j.x,j.y),end=&#x27;,&#x27;) condition = 1 for x in explored: if x.x==j.x and x.y==j.y: condition = 0 if condition and j.x&gt;=0 and j.x&lt;=9 and j.y&gt;=0 and j.y&lt;=9 and map1[j.x][j.y] != &#x27;#&#x27;: frontier.append(Unit((i[0],i[1]),(current.x,current.y)))def travel(map1,start): frontier = [] explored = [] current = Unit((start.x,start.y),start.parent) frontier.append(current) while True: if len(frontier) == 0: print(&quot;No result&quot;) break del(frontier[0]) explored.append(Unit((current.x,current.y),current.parent)) if current.x == goal.x and current.y == goal.y: print(&quot;\\nGot it!\\n&quot;) route_trace(current,explored) map_show(map1) break action(frontier,explored,current) if len(frontier) == 0: print(&quot;No result&quot;) break current = frontier[0] travel(map1,start) 结果如下： 123456789101112131415161718192021222324252627282930313233343536373839404142# # # # # B # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # A # # # # Got it!# # # # # . . . . B # # # # # . # # # # # # # # # . # # # # # # # # # . # # # # # # # # # . # # # # . # # # # # . # # # # # # # # # . # # # # # # # # # . # # # # A . . . . . # # # # 现在，这个程序已经能够找出各种迷宫地图的解法了，也就是说，如果我们对地图进行修改，程序也能够正常运行并输出相应结果，比如，我们将地图的唯一道路“封死”，那么结果就会是“No result”，如下所示： 123456789101112131415161718192021# # # # # B # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # A # # # # # No result 至此，我们就完成了对此情境下相关代码的编写。 修改于2021.04.11","categories":[],"tags":[{"name":"知识输出","slug":"知识输出","permalink":"http://uniqueland.top/tags/%E7%9F%A5%E8%AF%86%E8%BE%93%E5%87%BA/"},{"name":"AI","slug":"AI","permalink":"http://uniqueland.top/tags/AI/"}]},{"title":"来自班级组织演讲的一篇演讲稿","slug":"Speech","date":"2021-04-09T16:46:04.297Z","updated":"2020-11-09T06:00:08.000Z","comments":true,"path":"2021/04/10/Speech/","link":"","permalink":"http://uniqueland.top/2021/04/10/Speech/","excerpt":"正文地狱空荡荡 恶魔在人间 想必在座各位多少看过这句话，这就是我今天要说的有关Telegram N号房事件的一些东西；由于案情复杂，我就不再赘述，有兴趣的请自行百度主要人物介绍：","text":"正文地狱空荡荡 恶魔在人间 想必在座各位多少看过这句话，这就是我今天要说的有关Telegram N号房事件的一些东西；由于案情复杂，我就不再赘述，有兴趣的请自行百度主要人物介绍：赵主彬：现年25岁，信息通信专业，曾担任学报编辑部编辑。多次获得奖学金。3年内参加了50多次志愿活动。就是这么一个表面人畜无害的优秀学生，主导了这么一起事件。对此人进行分析，我们不难得出：平台用telegram，交易用比特币，说明罪犯反侦查意识高，思维敏捷，可以归类为高智商信息犯罪；内心自卑，但是外围性格特征表现为自负，因无法达到自身的高度预期郁不得志，因此可能存在社会偏见，有一定概率发展为反社会型人格；可能存在家庭暴力，且是父权家庭；社交能力较差，排斥甚至仇视女性，这点可以从他在被捕后的言论发表矢口不谈对女性的道歉这一点可以看出。 有的孩子是孩子，有的孩子是禽兽这十几年都塞了什么进脑子里人名不打码，马赛克做错了什么 就像这些评论所表述的一样，我也痛恨这些精虫上脑的东西。但是几乎一边倒的网络舆论显然有些问题：这26万人个个都罪该万死吗？考虑到涉案人数及案件的复杂程度，我个人觉得其中还是不乏被教唆的，受蒙骗的，甚至不明情况的。不是说强行洗白，而是我认为每个人看待事情都应该有自己的看法，有那种不被舆论大势所动摇的那种看法。大家是否看过这样一个比喻：韩国目前在运营的出租车大概有26万辆，这意味着在韩国的大街上，遇到N号房会员就像遇到出租车一样频繁。不知各位对这个比喻有什么看法在我看来，这是一种下意识的情景描绘，旨在放大案件涉及的范围，而这种情景描绘于我来看除了放大恐慌之外没有任何用处，那他们这么做的目的何在呢？要我说要不就是公众号博人眼球，要不就涉及到黑公关带节奏，由于这是一个国家级的案件，比起背后大到令人无法想象的黑灰产业链，我还是更倾向于前者。 最后，引用了几句某些公众号的评价作为我对此事的看法，话很粗，但理不粗：作为一个成年人，要学会克制，不该馋的不要馋。我知道现在是春天，但只有野狗才不分场合、不分对象，时刻想着交配。何况，野狗也只在春秋两季才发情 补充由于班级组织的演讲限时3分钟，所以我不得不把原本一千多字的演讲稿删为800多字，也因此缺失了很多事件的细节及个人的观点。–2020.05.07","categories":[],"tags":[]},{"title":"Linux下利用命令行对U盘和电脑中的文件进行操作","slug":"Operations between flash disk and linux os","date":"2021-04-09T16:46:04.296Z","updated":"2020-11-10T03:52:41.832Z","comments":true,"path":"2021/04/10/Operations between flash disk and linux os/","link":"","permalink":"http://uniqueland.top/2021/04/10/Operations%20between%20flash%20disk%20and%20linux%20os/","excerpt":"","text":"123456fdisk -l #查看接入设备名称mount /dev/sda1 /mnt #挂载U盘ls /mnt #查看U盘文件cp file directory #复制指定文件file至指定目录directoryls /mnt #再次查看U盘文件umount /mnt #卸载U盘 标题（可选）提示：若操作中出现错误，请查看权限是否正确，或在每次操作前加’sudo’cp后的文件和路径需带路径(个人推荐绝对路径)","categories":[],"tags":[{"name":"Program","slug":"Program","permalink":"http://uniqueland.top/tags/Program/"}]},{"title":"Markdown_Editor V1.0","slug":"Markdown_Editor V1.0","date":"2021-04-09T16:46:04.295Z","updated":"2020-11-10T02:56:29.631Z","comments":true,"path":"2021/04/10/Markdown_Editor V1.0/","link":"","permalink":"http://uniqueland.top/2021/04/10/Markdown_Editor%20V1.0/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556\\# -*- coding=utf-8 -*- import tkinterimport osfrom tkinter import filedialogwin_size=&#x27;450x550&#x27;win = tkinter.Tk()win.geometry(win_size)win.title(&#x27;Markdown Editor V1.0 (hexo only)&#x27;)def processandsave(): contents = &#x27;---\\ntitle:&#x27; + title.get(&#x27;0.0&#x27;,&#x27;end&#x27;) + &#x27;tags:&#x27; + tags.get(&#x27;0.0&#x27;,&#x27;end&#x27;) + &#x27;---\\n&#x27; + content.get(&#x27;0.0&#x27;,&#x27;end&#x27;) filename = filedialog.asksaveasfilename() if filename is not None: with open(file=filename,mode=&#x27;w&#x27;) as file: file.write(str(contents)) title.delete(&#x27;0.0&#x27;,&#x27;end&#x27;) tags.delete(&#x27;0.0&#x27;,&#x27;end&#x27;) content.delete(&#x27;0.0&#x27;,&#x27;end&#x27;)def add_bash(): add_content=add_bash_text.get(&#x27;0.0&#x27;,&#x27;end&#x27;) add_content=add_content.rstrip() changing_content=&#x27;```bash\\n&#x27;+add_content+&#x27;\\n```\\n&#x27; content.insert(&#x27;end&#x27;,changing_content) add_bash_text.delete(&#x27;0.0&#x27;,&#x27;end&#x27;)label1=tkinter.Label(text=&#x27;标题&#x27;,padx=10,pady=10)label1.grid(row=0,column=0)title=tkinter.Text(width=40,height=2)title.grid(row=0,column=1,columnspan=2)label2=tkinter.Label(text=&#x27;标签&#x27;,padx=5,pady=5)label2.grid(row=1,column=0)tags=tkinter.Text(width=30,height=1)tags.grid(row=1,column=1)label3=tkinter.Label(text=&#x27;正文&#x27;,padx=5,pady=5)label3.grid(row=2,column=0)content=tkinter.Text(width=40,height=20)content.grid(row=2,column=1,rowspan=5)add_bash_button=tkinter.Button(win,text=&#x27;命令行&#x27;,command=add_bash)add_bash_button.grid(row=9,column=0)add_bash_text=tkinter.Text(width=40,height=5)add_bash_text.grid(row=9,column=1)save_button=tkinter.Button(win,text=&#x27;保存&#x27;,command=processandsave)save_button.grid(row=8,column=1)win.mainloop()","categories":[],"tags":[{"name":"Program","slug":"Program","permalink":"http://uniqueland.top/tags/Program/"}]},{"title":"Thanksgiving","slug":"img_share","date":"2021-04-09T16:46:04.294Z","updated":"2020-11-28T16:15:08.320Z","comments":true,"path":"2021/04/10/img_share/","link":"","permalink":"http://uniqueland.top/2021/04/10/img_share/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"HTML笔记","slug":"HTML_notes","date":"2021-04-09T16:46:04.293Z","updated":"2021-01-18T15:02:48.534Z","comments":true,"path":"2021/04/10/HTML_notes/","link":"","permalink":"http://uniqueland.top/2021/04/10/HTML_notes/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980811 &lt;h1&gt; to &lt;/h6&gt;: 一到六号标题2 &lt;p&gt;段落&lt;/p&gt;3 &lt;body style=&quot;background-color:PowderBlue;&quot;&gt; &lt;p style=&quot;font-family:verdana;color:red&quot;&gt;对段落样式进行修改&lt;/p&gt; &lt;/body&gt;4 &lt;br /&gt;&lt;hr /&gt;&lt;!这是注释，前面的是换行和分割线&gt;5 &lt;b&gt;被加粗的内容&lt;/b&gt;6 &lt;strong&gt;被...加粗的内容...吧&lt;/strong&gt;7 &lt;big&gt;被加大的内容&lt;/big&gt;8 &lt;em&gt;被强调(加斜)的内容&lt;/em&gt;9 &lt;i&gt;被...意大利式加斜的内容&lt;/i&gt;10 &lt;small&gt;被减小的内容&lt;/small&gt;11 &lt;sub&gt;位于右下角的小字部分&lt;/sub&gt;12 &lt;sup&gt;位于右上角的小字部分&lt;/sup&gt;13 &lt;pre&gt;预格式文本(保留了空格和换行)&lt;/pre&gt;14 &lt;code&gt;用于&lt;/code&gt;,&lt;kbd&gt;显示&lt;/kbd&gt;,&lt;samp&gt;代码&lt;/samp&gt;,&lt;var&gt;这个加大加粗了一点&lt;/var&gt;15 &lt;address&gt;用于书写地址，其中记得手动添加换行标签&lt;/address&gt;16 &lt;abbr title=&quot;etcetera&quot;&gt;etc.&lt;/abbr&gt;17 &lt;acronym title=&quot;World Wide Web&quot;&gt;WWW&lt;/acronym&gt;18 &lt;bdo dir=&quot;rtl&quot;&gt;印打序倒&lt;/bdo&gt;19 &lt;blockquote&gt;块引用&lt;/blockquote&gt;,&lt;q&gt;短引用&lt;/q&gt;20 &lt;p&gt;你看&lt;del&gt;我被划掉了&lt;/del&gt;&lt;ins&gt;又被加下划线了&lt;/ins&gt;&lt;/p&gt;21 &lt;a name=&quot;tips&quot;&gt;基本的注意事项 - 有用的提示&lt;/a&gt; &lt;a href=&quot;#tips&quot;&gt;有用的提示&lt;/a&gt;22 &lt;img src=&quot;url&quot; width=xx height=xx align=xxx /&gt;23 &lt;table border=&quot;1&quot;&gt; &lt;tr&gt; &lt;th&gt;Heading&lt;/th&gt; &lt;th&gt;Another Heading&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;row 1, cell 1&lt;/td&gt; &lt;td&gt;row 1, cell 2&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;row 2, cell 1&lt;/td&gt; &lt;td&gt;row 2, cell 2&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;24 &lt;ul&gt;&lt;!unsorted list&gt; &lt;li&gt;Coffee&lt;/li&gt; &lt;li&gt;Milk&lt;/li&gt; &lt;/ul&gt;25 &lt;ol&gt;&lt;!ordered list&gt; &lt;li&gt;Coffee&lt;/li&gt; &lt;li&gt;Milk&lt;/li&gt; &lt;/ol&gt;26 &lt;dl&gt;&lt;!defined list&gt; &lt;dt&gt;Coffee&lt;/dt&gt; &lt;dd&gt;Black hot drink&lt;/dd&gt; &lt;dt&gt;Milk&lt;/dt&gt; &lt;dd&gt;White cold drink&lt;/dd&gt; &lt;/dl&gt;27 &lt;head&gt; &lt;style&gt; .cities &#123; background-color:black; color:white; margin:20px; padding:20px; &#125; &lt;/style&gt; &lt;/head&gt;28 &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;style&gt; span.red &#123;color:red;&#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;My &lt;span class=&quot;red&quot;&gt;Important&lt;/span&gt; Heading&lt;/h1&gt; &lt;/body&gt; &lt;/html&gt;29 &lt;iframe src=&quot;demo_iframe.htm&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;&lt;/iframe&gt;30 &lt;body background=&quot;http://www.w3school.com.cn/clouds.gif&quot;&gt;31 &lt;script type=&quot;text/javascript&quot;&gt; document.write(&quot;Hello World!&quot;) &lt;/script&gt; &lt;noscript&gt;Your browser does not support JavaScript!&lt;/noscript&gt; Quick Search","categories":[],"tags":[{"name":"Program","slug":"Program","permalink":"http://uniqueland.top/tags/Program/"}]},{"title":"0","slug":"0","date":"2020-03-22T09:06:28.000Z","updated":"2020-11-09T06:00:08.000Z","comments":true,"path":"2020/03/22/0/","link":"","permalink":"http://uniqueland.top/2020/03/22/0/","excerpt":"","text":"Hello,World！说人话 我终于有自己的网站啦 虽然只是部署在github上的先做个测试 下回在看看要弄啥peach..啊不…peace～～","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"web","slug":"web","permalink":"http://uniqueland.top/tags/web/"},{"name":"Program","slug":"Program","permalink":"http://uniqueland.top/tags/Program/"},{"name":"知识输出","slug":"知识输出","permalink":"http://uniqueland.top/tags/%E7%9F%A5%E8%AF%86%E8%BE%93%E5%87%BA/"},{"name":"AI","slug":"AI","permalink":"http://uniqueland.top/tags/AI/"}]}